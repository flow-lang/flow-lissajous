{"version":3,"sources":["audio/node.js","audio/keyed.js"],"names":["node","type","properties","connections","ref","key","audioBufferSource","audioDestination","audioScheduledSource","biquadFilter","channelMerger","channelSplitter","constantSource","convolver","delay","dynamicsCompressor","gain","iirFilter","oscillator","panner","stereoPanner","waveShaper","compressor","dac","filter","num","osc","keyed","analyser","mediaElementAudioSource","mediaStreamAudioDestination","mediaStreamAudioSource"],"mappings":"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","file":"keyed.js","sourceRoot":"../src","sourcesContent":["export const node = (type, properties = [], connections = []) => ({ type, properties, connections })\nexport const ref = key => ({ type: 'RefNode', key })\n\n// export const analyser = (properties, connections) => node('AnalyserNode', properties, connections)\nexport const audioBufferSource = (properties, connections) => node('AudioBufferSourceNode', properties, connections)\nexport const audioDestination = () => node('AudioDestinationNode')\nexport const audioScheduledSource = (properties, connections) => node('AudioScheduledSourceNode', properties, connections)\nexport const biquadFilter = (properties, connections) => node('BiquadFilterNode', properties, connections)\nexport const channelMerger = (properties, connections) => node('ChannelMergerNode', properties, connections)\nexport const channelSplitter = (properties, connections) => node('ChannelSplitterNode', properties, connections)\nexport const constantSource = (properties, connections) => node('ConstantSourceNode', properties, connections)\nexport const convolver = (properties, connections) => node('ConvolverNode', properties, connections)\nexport const delay = (properties, connections) => node('DelayNode', properties, connections)\nexport const dynamicsCompressor = (properties, connections) => node('DynamicsCompressorNode', properties, connections)\nexport const gain = (properties, connections) => node('GainNode', properties, connections)\nexport const iirFilter = (properties, connections) => node('IIRFilterNode', properties, connections)\n// export const mediaElementAudioSource = (properties, connections) => node('MediaElementAudioSourceNode', properties, connections)\n// export const mediaStreamAudioDestination = (properties, connections) => node('MediaStreamAudioDestinationNode', properties, connections)\n// export const mediaStreamAudioSource = (properties, connections) => node('MediaStreamAudioSourceNode', properties, connections)\nexport const oscillator = (properties, connections) => node('OscillatorNode', properties, connections)\nexport const panner = (properties, connections) => node('PannerNode', properties, connections)\nexport const stereoPanner = (properties, connections) => node('StereoPannerNode', properties, connections)\nexport const waveShaper = (properties, connections) => node('WaveShaperNode', properties, connections)\n\nexport const compressor = dynamicsCompressor\nexport const dac = audioDestination\nexport const filter = biquadFilter\nexport const num = constantSource\nexport const osc = oscillator\n\nexport default {\n  // Core\n  node,\n  ref,\n  // Web Audio nodes\n  // analyser,\n  audioBufferSource,\n  audioDestination,\n  audioScheduledSource,\n  biquadFilter,\n  channelMerger,\n  channelSplitter,\n  constantSource,\n  convolver,\n  delay,\n  dynamicsCompressor,\n  gain,\n  iirFilter,\n  // mediaElementAudioSource,\n  // mediaStreamAudioDestination,\n  // mediaStreamAudioSource,\n  oscillator,\n  panner,\n  stereoPanner,\n  waveShaper,\n  // Aliases\n  compressor,\n  dac,\n  filter,\n  num,\n  osc\n}\n","import { node } from './node'\n\nexport const keyed = (key, type, properties = [], connections = []) => ({ key, ...node(type, properties, connections) })\nexport const key = (key, node) => ({ key, ...node })\n\nexport const analyser = (key, properties, connections) => keyed(key, 'AnalyserNode', properties, connections)\nexport const audioBufferSource = (key, properties, connections) => keyed(key, 'AudioBufferSourceNode', properties, connections)\nexport const audioScheduledSource = (key, properties, connections) => keyed(key, 'AudioScheduledSourceNode', properties, connections)\nexport const biquadFilter = (key, properties, connections) => keyed(key, 'BiquadFilterNode', properties, connections)\nexport const channelMerger = (key, properties, connections) => keyed(key, 'ChannelMergerNode', properties, connections)\nexport const channelSplitter = (key, properties, connections) => keyed(key, 'ChannelSplitterNode', properties, connections)\nexport const constantSource = (key, properties, connections) => keyed(key, 'ConstantSourceNode', properties, connections)\nexport const convolver = (key, properties, connections) => keyed(key, 'ConvolverNode', properties, connections)\nexport const delay = (key, properties, connections) => keyed(key, 'DelayNode', properties, connections)\nexport const dynamicsCompressor = (key, properties, connections) => keyed(key, 'DynamicsCompressorNode', properties, connections)\nexport const gain = (key, properties, connections) => keyed(key, 'GainNode', properties, connections)\nexport const iirFilter = (key, properties, connections) => keyed(key, 'IIRFilterNode', properties, connections)\nexport const mediaElementAudioSource = (key, properties, connections) => keyed(key, 'MediaElementAudioSourceNode', properties, connections)\nexport const mediaStreamAudioDestination = (key, properties, connections) => keyed(key, 'MediaStreamAudioDestinationNode', properties, connections)\nexport const mediaStreamAudioSource = (key, properties, connections) => keyed(key, 'MediaStreamAudioSourceNode', properties, connections)\nexport const oscillator = (key, properties, connections) => keyed(key, 'OscillatorNode', properties, connections)\nexport const panner = (key, properties, connections) => keyed(key, 'PannerNode', properties, connections)\nexport const stereoPanner = (key, properties, connections) => keyed(key, 'StereoPannerNode', properties, connections)\nexport const waveShaper = (key, properties, connections) => keyed(key, 'WaveShaperNode', properties, connections)\n\nexport const compressor = dynamicsCompressor\nexport const filter = biquadFilter\nexport const num = constantSource\nexport const osc = oscillator\n\nexport default {\n  // Core\n  keyed,\n  key,\n  // Keyed Web Audio nodes\n  analyser,\n  audioBufferSource,\n  audioScheduledSource,\n  biquadFilter,\n  channelMerger,\n  channelSplitter,\n  constantSource,\n  convolver,\n  delay,\n  dynamicsCompressor,\n  gain,\n  iirFilter,\n  mediaElementAudioSource,\n  mediaStreamAudioDestination,\n  mediaStreamAudioSource,\n  oscillator,\n  panner,\n  stereoPanner,\n  waveShaper,\n  // Aliases\n  compressor,\n  filter,\n  num,\n  osc\n}\n"]}