{"version":3,"sources":["runtime/virtual-audio.js","utils.js","runtime/virtual-dom.js","program/instrument.js","audio/node.js","audio/property.js","audio/keyed.js","audio/event.js","music/notes.json","music/note.js","music/time.js","dom/element.js","dom/attribute.js","dom/event.js","index.js"],"names":["defer","f","setTimeout","AudioContext","window","webkitAudioContext","VirtualAudioGraph","context","opts","$context","$nodes","$","createGain","gain","linearRampToValueAtTime","currentTime","connect","destination","vPrev","autostart","resume","flatten","graph","nodes","depth","forEach","node","i","type","key","connections","base","length","oldNodes","newNodes","Object","patches","created","updated","removed","newNode","oldNode","push","data","connection","split","j","Math","max","properties","oldProp","newProp","label","value","oldConnection","newConnection","values","vGraph","vCurr","prepare","diff","patch","_destroyNode","_removeProperty","_disconnect","_createNode","_setProperty","_connect","suspend","$node","createAnalyser","createBufferSource","createBiquadFilter","createChannelMerger","createChannelSplitter","createConstantSource","createConvolver","maxDelayTime","find","createDelay","createDynamicsCompressor","feedforward","feedback","createIIRFilter","mediaElement","createMediaElementSource","document","querySelector","createMediaStreamDestination","createOscillator","createPanner","createStereoPanner","createWaveShaper","console","warn","prop","start","stop","disconnect","method","target","time","default","a","b","param","VirtualDOM","$root","firstChild","removeChild","attrs","children","index","$el","childNodes","_replace","isText","isVirtualNode","tag","prevAttr","currAttr","setAttribute","name","removeAttribute","update","isComponent","_remove","_append","createTextNode","createElement","attr","elem","appendChild","_create","replaceChild","remove","instrument","init","$model","$audio","$view","audio","view","listen","__init","__update","__audio","__view","__listen","DEBUG_MODE","$plugins","html","event","$dispatch","action","result","Array","isArray","$update","model","effect","undefined","group","JSON","stringify","timeEnd","dom","events","plugin","filter","__eventType","run","groupEnd","use","log","__pluginName","__pluginType","__registerPlugin","root","flags","pluginType","debug","__install","send","ref","audioBufferSource","audioDestination","audioScheduledSource","biquadFilter","channelMerger","channelSplitter","constantSource","convolver","delay","dynamicsCompressor","iirFilter","oscillator","panner","stereoPanner","waveShaper","compressor","dac","num","osc","property","scheduledProperty","setValueAtTime","exponentialRampToValueAtTime","setValuesAtTime","valuesAndTimes","map","linearRampToValuesAtTime","exponentialRampToValuesAtTime","attack","coneInnerAngle","coneOuterAngle","coneOuterGain","curve","delayTime","detune","distanceModel","fftSize","frequency","frequencyBinCount","gainAmount","knee","loop","loopEnd","loopStart","maxChannelCount","maxDecibels","maxDistance","mediaStream","minDecibels","normalize","offset","orientationX","orientationY","orientationZ","oversample","pan","panningModel","playbackRate","positionX","positionY","positionZ","q","ratio","reduction","refDistance","release","rolloffFactor","smoothingTimeConstant","stream","threshold","keyed","analyser","mediaElementAudioSource","mediaStreamAudioDestination","mediaStreamAudioSource","id","handler","every","at","newEvents","oldEvents","keys","$events","newEvent","oldEvent","Event","interval","lookahead","targetTime","timerID","setInterval","clearInterval","module","exports","A0","Bb0","B0","C1","Db1","D1","Eb1","E1","F1","Gb1","G1","Ab1","A1","Bb1","B1","C2","Db2","D2","Eb2","E2","F2","Gb2","G2","Ab2","A2","Bb2","B2","C3","Cb3","D3","Eb3","E3","F3","Gb3","G3","Ab3","A3","Bb3","B3","C4","Db4","D4","Eb4","E4","F4","Gb4","G4","Ab4","A4","Bb4","B4","C5","Db5","D5","Eb5","E5","F5","Gb5","G5","Ab5","A5","Bb5","B5","C6","Db6","D6","Eb6","E6","F6","Gb6","G6","Ab6","A6","Bb6","B6","C7","Db7","D7","Eb7","E7","F7","Gb7","G7","Ab7","A7","Bb7","B7","C8","mton","note","Notes","mtof","pow","ntom","toUpperCase","toLowerCase","ntof","ftom","log2","fton","pretissimo","presto","vivace","allegro","allegroModera","moderato","andante","adagietto","adagio","larghetto","largo","lento","larghissimo","Whole","HalfDotted","Half","HalfTripplet","QuarterDotted","Quarter","QuarterTripplet","EighthDotted","Eighth","EighthTripplet","SixteenthDotted","Sixteenth","SixteenthTripplet","ThirtysecondDotted","Thirtysecond","ThirtysecondTripplet","ms","bpm","sec","element","abbr","address","area","article","aside","bdi","bdo","blockquote","body","br","button","canvas","caption","cite","code","col","colgroup","datalist","dd","del","details","dfn","dialog","div","dl","dt","em","embed","fieldset","figure","footer","form","h1","h2","h3","h4","h5","h6","head","header","hgroup","hr","iframe","img","input","ins","kbd","keygen","legend","li","link","main","mark","menu","menuitem","meta","meter","nav","noscript","object","ol","optgroup","option","output","p","pre","progress","rb","rp","rt","rtc","ruby","s","samp","script","section","select","small","source","span","strong","style","sub","summary","sup","table","tbody","td","template","text","textarea","tfoot","th","thead","title","tr","track","u","ul","var_","video","wbr","attribute","accept","acceptCharset","accesskey","align","allow","alt","async","autocapitalize","autocomplete","autofocus","autoplay","buffered","challenge","charset","checked","className","codebase","color","cols","colspan","content","contenteditable","contextmenu","controls","coords","crossorigin","csp","dataCustom","datetime","decoding","default_","dir","dirname","disabled","download","draggable","dropzone","enctype","for_","formaction","headers","height","hidden","high","href","hreflang","httpEquiv","icon","importance","integrity","ismap","itemprop","keytype","kind","lang","language","lazyload","list","low","manifest","maxlength","minlength","media","min","multiple","muted","novalidate","open","optimum","pattern","ping","placeholder","poster","preload","radiogroup","readonly","referrerpolicy","rel","required","reversed","rows","rowspan","sandbox","scope","scoped","selected","shape","size","sizes","slot","spellcheck","src","srcdoc","srclang","srcset","step","tabindex","translate","usemap","width","wrap","selector","eventName","focus","blur","reset","submit","fullscreenchange","fullscreenerror","resize","scroll","cut","copy","paste","keydown","keypress","keyup","auxclick","click","dblclick","mousedown","mouseenter","mouseleave","mousemove","mouseover","mouseout","mouseup","pointerlockchange","pointerlockerror","wheel","drag","dragend","dragenter","dragstart","dragleave","dragover","drop","broadcast","CheckboxStateChange","hashchange","RadioStateChange","readystatechange","ValueChange","compassneedscalibration","devicelight","devicemotion","deviceorientation","deviceproximity","orientationchange","userproximity","touchcancel","touchend","touchenter","touchleave","touchmove","touchstart","pointerover","pointerenter","pointerdown","pointermove","pointerup","pointercancel","pointerout","pointerleave","gotpointercapture","lostpointercapture","addEventListener","e","$isGlobal","matches","specific","Program","Audio","Node","Property","Keyed","AudioEvent","DOM","Element","Attribute","DOMEvent","Music","Note","Time"],"mappings":"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","file":"index.js","sourceRoot":"../src","sourcesContent":["const defer = f => setTimeout(f, 0)\nconst AudioContext = window.AudioContext || window.webkitAudioContext\n\nexport default class VirtualAudioGraph {\n  // Static Methods ============================================================\n  //\n  static prepare (graph = []) {\n    // The first step in preparing the graph is to key each virtual node.\n    // This is how we perform a diff between graphs and calculate what has\n    // changed each update.\n    const key = (graph, base = '') => {\n      graph.forEach((node, i) => {\n        // RefNodes always have a key, and they also\n        // cannot have connections or properties\n        // so we can just return early and move on.\n        if (node.type === 'RefNode') return\n        // Assign the node a key if it didn't already have one.\n        // This is how we track changes to the graph in a slightly\n        // more organised way\n        if (!node.key) node.key = `${base}_${i}`\n\n        // Recursively assign keys to this nodes connections.\n        if (node.connections && node.connections.length > 0) {\n          key(node.connections, node.key)\n        }\n      })\n\n      return graph\n    }\n\n    // It is often most natural to represent the audio graph as a list\n    // of trees, using RefNodes to \"jump\" between chains of node\n    // connections. This isns't the easiest data structure to deal with\n    // however, so the next step in preparation is the flatten the graph\n    // into a single array.\n    const flatten = (graph, nodes = {}, depth = 0) => {\n      graph.forEach((node, i) => {\n        // Don't push RefNodes to the flat graph.\n        if (node.type !== 'RefNode') nodes[node.key] = node\n        if (node.connections) flatten(node.connections, nodes, depth + 1)\n        // If we're deeper than the root of the graph, replace\n        // this node with a reference to itself by key.\n        if (depth > 0) graph[i] = { type: 'RefNode', key: node.key }\n      })\n\n      return nodes\n    }\n\n    return flatten(key(graph))\n  }\n\n  //\n  static diff (oldNodes, newNodes) {\n    const patches = { created: [], updated: [], removed: [] }\n\n    for (const newNode of Object.values(newNodes)) {\n      const oldNode = oldNodes[newNode.key]\n\n      // A node with newNode.key does not exist in the old graph, so this must\n      // mean we've created a brand new node.\n      if (!oldNode) {\n        patches.created.push({ type: 'node', key: newNode.key, data: newNode })\n\n        newNode.connections.forEach(connection => {\n          patches.created.push({ type: 'connection', key: newNode.key, data: connection.key.split('.') })\n        })\n\n      // A node with the same key exists in both graphs, but the type has changed\n      // (eg osc -> gain) so we need to recreate the node.\n      } else if (oldNode.type !== newNode.type) {\n        patches.updated.push({ type: 'node', key: newNode.key, data: newNode })\n\n        newNode.connections.forEach(connection => {\n          patches.created.push({ type: 'connection', key: newNode.key, data: connection.key.split('.') })\n        })\n\n      // A node with the same key exists in both graphs and the node hasn't\n      // fundamentally changed, so now we check whether properties or connections\n      // have changed.\n      } else {\n        // Checking properties...\n        for (let j = 0; j < Math.max(oldNode.properties.length, newNode.properties.length); j++) {\n          const oldProp = oldNode.properties[j]\n          const newProp = newNode.properties[j]\n\n          //\n          if (!oldProp) {\n            patches.created.push({ type: 'property', key: oldNode.key, data: newProp })\n          } else if (!newProp) {\n            patches.removed.push({ type: 'property', key: oldNode.key, data: oldProp })\n          } else if (oldProp.label !== newProp.label) {\n            patches.removed.push({ type: 'property', key: oldNode.key, data: oldProp })\n            patches.created.push({ type: 'property', key: oldNode.key, data: newProp })\n          } else if (oldProp.value !== newProp.value) {\n            patches.updated.push({ type: 'property', key: oldNode.key, data: newProp })\n          }\n        }\n\n        // Checking connections...\n        for (let j = 0; j < Math.max(oldNode.connections.length, newNode.connections.length); j++) {\n          const oldConnection = oldNode.connections[j]\n          const newConnection = newNode.connections[j]\n\n          //\n          if (!oldConnection) {\n            patches.created.push({ type: 'connection', key: oldNode.key, data: newConnection.key.split('.') })\n          } else if (!newConnection) {\n            patches.removed.push({ type: 'connection', key: oldNode.key, data: oldConnection.key.split('.') })\n          } else if (oldConnection.key !== newConnection.key) {\n            patches.removed.push({ type: 'connection', key: oldNode.key, data: oldConnection.key.split('.') })\n            patches.created.push({ type: 'connection', key: oldNode.key, data: newConnection.key.split('.') })\n          }\n        }\n      }\n\n      delete oldNodes[newNode.key]\n    }\n\n    for (const oldNode of Object.values(oldNodes)) {\n      patches.removed.push({ type: 'node', key: oldNode.key, data: oldNode })\n    }\n\n    return patches\n  }\n\n  // Constructor ===============================================================\n  //\n  constructor (context = new AudioContext(), opts = {}) {\n    // Borrowing a convetion from virtual dom libraries, the $ sign //is used to\n    // indicate \"real\" Web Audio bits, and the v- prefix is used to indicate\n    // virtual elements.\n\n    // $context is a reference to the `AudioContext` either passed in or created\n    // on construction.\n    this.$context = context\n    // A reference to the real graph of audio nodes\n    this.$nodes = {\n      $: this.$context.createGain()\n    }\n\n    // Schedule the master gain to fade in as soon as the audio context is \n    // resumed (if it was suspended) or immediately (if the context was created)\n    // in response to some user action.\n    this.$nodes.$.gain.linearRampToValueAtTime(1, this.$context.currentTime + 1)\n    this.$nodes.$.connect(this.$context.destination)\n\n    // We keep track of the prebious graph so we can perform a diff and work out\n    // what has changed between updates.\n    this.vPrev = {}\n\n    // In most modern browsers an Audio Context starts in a suspended state and\n    // requires some user interaction before it can be resumed. Still, we can\n    // attempt to resume the context ourselves in the developer passes in the\n    // `autostart` option.\n    if (opts.autostart) this.resume()\n  }\n\n  // Public Methods ============================================================\n  //\n  update (vGraph = []) {\n    // The accompanying library of virtual node functions\n    // encourages a nested tree-like approach to describing\n    // audio graphs. This isn't the easiest structure to deal\n    // with, however, so a preparation step serves to wrestle\n    // the graph into a more suitable shape.\n    const vCurr = VirtualAudioGraph.prepare(vGraph)\n\n    // A diff tracks everything that has been removed, created,\n    // and updated between updates. We perform this step so we\n    // only touch the audio nodes that need to be changed in some\n    // way.\n    const diff = VirtualAudioGraph.diff(this.vPrev, vCurr)\n\n    // Remove nodes and properties from the graph.\n    diff.removed.forEach(patch => {\n      switch (patch.type) {\n        case 'node':\n          this._destroyNode(patch.key)\n          break\n        case 'property':\n          this._removeProperty(patch.key, patch.data)\n          break\n        case 'connection':\n          this._disconnect(patch.key, patch.data)\n          break\n      }\n    })\n\n    // Create new nodes and add new properties to\n    // the graph.\n    diff.created.forEach(patch => {\n      switch (patch.type) {\n        case 'node':\n          this._createNode(patch.key, patch.data)\n          break\n        case 'property':\n          this._setProperty(patch.key, patch.data)\n          break\n        case 'connection':\n          defer(() => this._connect(patch.key, patch.data))\n          break\n      }\n    })\n\n    // Update existing nodes and properties in the\n    // graph.\n    diff.updated.forEach(patch => {\n      switch (patch.type) {\n        case 'node':\n          this._destroyNode(patch.key)\n          this._createNode(patch.key, patch.data)\n          break\n        case 'property':\n          this._setProperty(patch.key, patch.data)\n          break\n        case 'connection':\n          // Connections can't be updated\n          break\n      }\n    })\n\n    // Store the current graph for next time.\n    this.vPrev = vCurr\n  }\n\n  // A thin wrapper of the `AudioContext.suspend()` method. This\n  // bassically exists so developers don't have to reach in and\n  // touch the \"real\" audio context directly.\n  suspend () {\n    this.$nodes.$.gain.value = 0\n    this.$context.suspend()\n  }\n\n  // A thin wrapper of the `AudioContext.resume()` method. This\n  // bassically exists so developers don't have to reach in and\n  // touch the \"real\" audio context directly.\n  resume () {\n    this.$context.resume()\n    this.$nodes.$.gain.linearRampToValueAtTime(1, this.$context.currentTime + 0.1)\n  }\n\n  // Private Methods ===========================================================\n  //\n  _createNode (key, { type, properties }) {\n    let $node = null\n\n    //\n    switch (type) {\n      case 'AnalyserNode':\n        $node = this.$context.createAnalyser()\n        break\n      case 'AudioBufferSourceNode':\n        $node = this.$context.createBufferSource()\n        break\n      case 'AudioDestinationNode':\n        $node = this.$nodes.$\n        break\n      case 'BiquadFilterNode':\n        $node = this.$context.createBiquadFilter()\n        break\n      case 'ChannelMergerNode':\n        $node = this.$context.createChannelMerger()\n        break\n      case 'ChannelSplitterNode':\n        $node = this.$context.createChannelSplitter()\n        break\n      case 'ConstantSourceNode':\n        $node = this.$context.createConstantSource()\n        break\n      case 'ConvolverNode':\n        $node = this.$context.createConvolver()\n        break\n      case 'DelayNode':\n        const maxDelayTime = properties.find(({ label }) => label === 'maxDelayTime')\n        $node = this.$context.createDelay((maxDelayTime && maxDelayTime.value) || 1)\n        break\n      case 'DynamicsCompressorNode':\n        $node = this.$context.createDynamicsCompressor()\n        break\n      case 'GainNode':\n        $node = this.$context.createGain()\n        break\n      case 'IIRFilterNode':\n        const feedforward = properties.find(({ label }) => label === 'feedforward')\n        const feedback = properties.find(({ label }) => label === 'feedback')\n        $node = this.$context.createIIRFilter(\n          (feedforward && feedforward.value) || [0],\n          (feedback && feedback.value) || [1]\n        )\n        break\n      case 'MediaElementAudioSourceNode':\n        const mediaElement = properties.find(({ label }) => label === 'mediaElement')\n        $node = this.$context.createMediaElementSource(\n          document.querySelector(mediaElement.value)\n        )\n        break\n      case 'MediaStreamAudioDestinationNode':\n        $node = this.$context.createMediaStreamDestination()\n        break\n        // TODO: How should I handle creating / grabbing the media stream?\n        // case 'MediaStreamAudioSourceNode':\n        //   $node = this.$context.createMediaStreamSource(\n\n        //   )\n        //   break\n      case 'OscillatorNode':\n        $node = this.$context.createOscillator()\n        break\n      case 'PannerNode':\n        $node = this.$context.createPanner()\n        break\n      case 'StereoPannerNode':\n        $node = this.$context.createStereoPanner()\n        break\n      case 'WaveShaperNode':\n        $node = this.$context.createWaveShaper()\n        break\n      //\n      default:\n        console.warn(`Invalide node type of: ${type}. Defaulting to GainNode to avoid crashing the AudioContext.`)\n        $node = this.$context.createGain()\n    }\n\n    this.$nodes[key] = $node\n\n    //\n    properties.forEach(prop => this._setProperty(key, prop))\n\n    // Certain nodes like oscillators must be started before they will produce\n    // noise. We make the assumption that these nodes should always start\n    // immediately after they have been created, so if a `start` method exists we\n    // call it.\n    if ($node.start) $node.start()\n  }\n\n  //\n  _destroyNode (key) {\n    const $node = this.$nodes[key]\n\n    // Certain nodes like oscillators can be stopped. It probably doesn't make\n    // much of a difference calling this method, but we do just in case!\n    if ($node.stop) $node.stop()\n\n    // Calling disconnect with no arguments will disconnect this node from\n    // everything.\n    $node.disconnect()\n\n    // Finally remove the node from the graph and let the GC do its job.\n    delete this.$nodes[key]\n  }\n\n  //\n  _setProperty (key, { type, label, value }) {\n    const $node = this.$nodes[key]\n\n    switch (type) {\n      case 'NodeProperty':\n        $node[label] = value\n        break\n      case 'AudioParam':\n        $node[label].linearRampToValueAtTime(value, this.$context.currentTime + 0.05)\n        break\n      case 'ScheduledAudioParam':\n        $node[label][value.method](value.target, value.time)\n        break\n    }\n  }\n\n  //\n  _removeProperty (key, { type, label, value }) {\n    const $node = this.$nodes[key]\n\n    switch (type) {\n      case 'NodeProperty':\n        break\n      case 'AudioParam':\n        $node[label].value = $node[label].linearRampToValueAtTime($node[label].default, this.$context.currentTime + 0.05)\n        break\n      case 'ScheduledAudioParam':\n        // TODO: work out how to cancel scheduled updates\n        break\n    }\n  }\n\n  //\n  _connect (a, [b, param = null]) {\n    if (b) this.$nodes[a].connect(param ? this.$nodes[b][param] : this.$nodes[b])\n  }\n\n  //\n  _disconnect (a, [b, param = null]) {\n    if (b) this.$nodes[a].disconnect(param ? this.$nodes[b][param] : this.$nodes[b])\n  }\n}","// Defer pushes a function to the back of the Browser's event queue. It essentially\n// tells the browser to \"do f when you next have time.\"\nexport const defer = f => setTimeout(f, 0)\n","import { defer } from '../utils'\n\nexport default class VirtualDOM {\n  // Static Methods ============================================================\n  //\n  static isText (node) {\n    return typeof node === 'string' ||\n      typeof node === 'number' ||\n      typeof node === 'boolean'\n  }\n\n  //\n  static isVirtualNode (node) {\n    return typeof node === 'object' && node.attrs && node.children\n  }\n\n  //\n  static isComponent (node) {\n    return typeof node === 'function'\n  }\n\n  // Constructor ===============================================================\n  //\n  constructor ($root) {\n    this.$root = $root\n    this.vPrev = null\n\n    // Remove any children on the root DOM node when a new VDOM is created, this\n    // ensures nothing interferes with the diffing process.\n    while (this.$root.firstChild) {\n      this.$root.removeChild(this.$root.firstChild)\n    }\n  }\n\n  // Public Methods ============================================================\n  //\n  update (vCurr, vPrev, $root, index = 0) {\n    // When update is first called it is just given the new virtual tree to diff,\n    // but it is then called recursively on each child element with the appropriate\n    // previous tree and root node. Because of this, we default to the original\n    // previous tree and the global root DOM node. We don't use the default\n    // assignment in the function arguments (like with index = 0) because I don't\n    // think you can access `this` from function arguments.\n    vPrev = vPrev || this.vPrev\n    $root = $root || this.$root\n\n    const $el = $root.childNodes[index]\n\n    // There is no previous tree.\n    if (!vPrev || !$el) {\n      this._append($root, vCurr)\n\n    // There is no new tree. This probably means we've\n    // removed a node (or the entire tree) from the previous\n    // tree so let's remove it from the dom.\n    } else if (!vCurr) {\n      $el && this._remove($el)\n\n    // There is a type mismatch between the previous and current\n    // trees. For example the old tree was an object representing\n    // a dom node, and now it is a string representing a text node.\n    } else if (typeof vPrev !== typeof vCurr) {\n      this._replace($root, $el, vCurr)\n\n    // The current nodes are the same type AND they are both text-like.\n    // This means we can do a simple equality comparison and replace\n    // them if necessary.\n    } else if (VirtualDOM.isText(vPrev) && VirtualDOM.isText(vCurr)) {\n      if (vPrev !== vCurr) {\n        this._replace($root, $el, vCurr)\n      }\n\n    // The current nodes are the same type AND they are both virtual nodes.\n    // Here we perform a more involved diff to determine what and how\n    // to update.\n    } else if (VirtualDOM.isVirtualNode(vPrev) && VirtualDOM.isVirtualNode(vCurr)) {\n      // We can safely assume if the tag has changed that the overall\n      // structure of the sub tree has changed too, and so we can\n      // replace the node and its children without performing any further\n      // diff.\n      if (vPrev.tag !== vCurr.tag) {\n        this._replace($root, $el, vCurr)\n\n      // Otherwise...\n      } else {\n        // First we diff the attributes on the node.\n        for (let i = 0; i < vPrev.attrs.length || i < vCurr.attrs.length; i++) {\n          const prevAttr = vPrev.attrs[i]\n          const currAttr = vCurr.attrs[i]\n\n          // This is somewhat ineffecient. If the order of attributes\n          // is different but both the previous and current node has\n          // the same attributes, they will be removed and then re-added.\n          if (!currAttr) {\n            $el.removeAttribute(prevAttr.name)\n          } else {\n            $el.setAttribute(currAttr.name, currAttr.value)\n          }\n        }\n      }\n\n      // Then iterate each of this node's children and recursively call\n      // the render function.\n      for (let i = 0; i < Math.max(vPrev.children.length, vCurr.children.length); i++) {\n        this.update(vCurr.children[i], vPrev.children[i], $el, i)\n      }\n\n    // Components are functions that return some virtual dom node(s), so they\n    // need to be handled differently. Currently we don't actually support\n    // components, but this is the foundation to do so.\n    } else if (VirtualDOM.isComponent(vPrev) && VirtualDOM.isComponent(vCurr)) {\n\n    }\n\n    // Update the previous tree so we can perform the right diff on subsequent\n    // calls to update.\n    this.vPrev = vCurr\n  }\n\n  // Private Methods ===========================================================\n  //\n  _create (node) {\n    if (VirtualDOM.isText(node)) {\n      return document.createTextNode(`${node}`)\n    }\n\n    // VirtualDOM.isVirtualNode performs the necessary checks to make sure the\n    // object has the necessary fields (type, attrs, children) so we can safely\n    // assume everything exists if it passes that check.\n    if (VirtualDOM.isVirtualNode(node)) {\n      // We assume the tag is valid, some checks\n      // may be useful here...\n      const $el = document.createElement(node.tag)\n\n      for (const attr of node.attrs) {\n        $el.setAttribute(attr.name, attr.value)\n      }\n\n      // Recursively create all the children\n      // of this node\n      for (const elem of node.children) {\n        $el.appendChild(this._create(elem))\n      }\n\n      return $el\n    }\n\n    // In the future we might want to handle custom omponent functions, but\n    // ight now we just return an empty node.\n    if (VirtualDOM.isComponent(node)) {\n      return document.createTextNode('')\n    }\n\n    // If some invalid object was passed in, just create a blank DOM node.\n    return document.createTextNode('')\n  }\n\n  //\n  _replace ($root, $el, node) {\n    $root.replaceChild(this._create(node), $el)\n  }\n\n  //\n  _append ($root, node) {\n    $root.appendChild(this._create(node))\n  }\n\n  //\n  _remove ($el) {\n    defer(() => $el.remove())\n  }\n}\n","import VirtualAudioGraph from '../runtime/virtual-audio'\nimport VirtualDOM from '../runtime/virtual-dom'\n\nimport { defer } from '../utils'\n\nexport default function instrument ({ init, update, audio, view, listen }) {\n  const __init = init\n  const __update = update\n  const __audio = audio\n  const __view = view\n  const __listen = listen\n\n  // Debug mode prints a load of information to the console at every step of\n  // the programs lifecycle. Generally not recommended as this is going to\n  // really hurt performance. Useful to see which part of your program is a\n  // bottleneck though.\n  let DEBUG_MODE = false\n\n  // Plugins can be registered to include new audio nodes, HTML components or\n  // different event listeners, so let's keep track of all the plugins a dev\n  // has added.\n  let $plugins = {\n    audio: [],\n    html: [],\n    event: []\n  }\n\n  let $context // An instance of an AudioContext\n  let $root // The root DOM node to attach our view to\n\n  let $model // To complete state of our program\n\n  let $audio // The VirtualAudioGraph\n  let $view // The VirtualDOM\n\n  // $dispatch is how side side effects,  events, and calls to send() can update\n  // the model.\n  const $dispatch = action => defer(() => {\n    const result = __update(action, $model)\n\n    // When we need to invoke additional side effects, calls to __update can\n    // reutrn an array like [ model, sideEffect ]. It's tedious to wrap every\n    // new model in an array if we don't need effects, however, so we allow\n    // __update to return anything. Anything that isn't an array is treated\n    // like a new model and wrapped here.\n    Array.isArray(result) ? $update(result) : $update([ result ])\n  })\n\n  // The internal update function. This takes the result of the users __update\n  // function and takes care of turning that new model into a new audio graph,\n  // dom, and event listeners. This is also where Effects get called.\n  const $update = ([ model, effect = undefined ]) => {\n    /* DEBUG STATEMENT */ if (DEBUG_MODE) console.time('Total update time')\n    /* DEBUG STATEMENT */ if (DEBUG_MODE) console.group('$update')\n\n    // If the model supplied is invalid, show a warning in the console to let\n    // the developer know. We don't do a simple falsey check (!model) because\n    // its reasnoable for a simple model to be an empty string or 0.\n    if (typeof model === 'undefined' || model === null) {\n      console.warn('Your update function returned undefined or null, ' +\n        'the model will remain unchainged. ' +\n        'Did you forget to handle all of your Actions?'\n      )\n\n    // A fairly naive check to see if the model has changed between updates. There\n    // is probably a performance cost to calling JSON.stringify like this, but it's\n    // potentially quicker than generating new virtual audio graphs, dom trees, and\n    // event listeners just to diff something that hasn't changed.\n    } else if (JSON.stringify($model) !== JSON.stringify(model)) {\n      $model = model\n\n      // Audio -----------------------------------------------------------------\n      /* DEBUG STATEMENT */ if (DEBUG_MODE) console.time('$audio')\n      const graph = __audio($model)\n\n      $audio.update(graph)\n      /* DEBUG STATEMENT */ if (DEBUG_MODE) console.timeEnd('$audio')\n      // DOM -------------------------------------------------------------------\n      /* DEBUG STATEMENT */ if (DEBUG_MODE) console.time('$view')\n      const dom = __view($model)\n\n      $view.update(dom)\n      /* DEBUG STATEMENT */ if (DEBUG_MODE) console.timeEnd('$view')\n      // Events ----------------------------------------------------------------\n      /* DEBUG STATEMENT */ if (DEBUG_MODE) console.time('$events')\n      const events = __listen($model)\n\n      // Each plugin creates events with its own __eventType property. So for each\n      // plugin, filter the events list and only pass in the ones that plugin was\n      // designed to handle.\n      $plugins.event.forEach(plugin => {\n        plugin.__update(\n          events.filter(event =>\n            event.__eventType === plugin.__eventType\n          )\n        )\n      })\n      /* DEBUG STATEMENT */ if (DEBUG_MODE) console.timeEnd('$events')\n    }\n\n    // Effects are functions that can have side effects, or do stateful things.\n    // to return an action back to the runtime they receive the $dispatch function.\n    if (effect) {\n      if (typeof effect === 'object') {\n        effect.run($dispatch, $model)\n      } else {\n        effect($dispatch, $model)\n      }\n    }\n\n    /* DEBUG STATEMENT */ if (DEBUG_MODE) console.groupEnd('$update')\n    /* DEBUG STATEMENT */ if (DEBUG_MODE) console.timeEnd('Total update time')\n  }\n\n  const __registerPlugin = plugin => {\n    switch (plugin.__pluginType) {\n      case 'audio':\n        break\n      case 'html':\n        break\n      case 'event':\n        $plugins.event.push(plugin)\n        break\n    }\n  }\n\n  return {\n    // Before a Program has been started, plugins can be registered to expand\n    // its functionality. They get installed when the start method is called\n    // so new plugins can't be registered after that.\n    use (plugin) {\n      console.log(`Registering ${plugin.__pluginName} plugin.`)\n      __registerPlugin(plugin)\n    },\n\n    // Creating a new Program isn't enough, it must be started before anything can\n    // happen. Calling start will setup the virtual audio graph and virtual DOM with\n    // their context and root node respectively. It'll also install any plugins that\n    // were registered prior to calling start, before finally creating the first model\n    // and performing the first render.\n    start ({ context, root, flags }) {\n      DEBUG_MODE = flags && flags.debug || DEBUG_MODE\n\n      /* DEBUG STATEMENT */ if (DEBUG_MODE) console.log('Starting Program...')\n      $context = context\n      $root = root\n\n      $audio = new VirtualAudioGraph($context)\n      $view = new VirtualDOM($root)\n\n      /* DEBUG STATEMENT */ if (DEBUG_MODE) console.log('Installing plugins...')\n      for (const pluginType in $plugins) {\n        $plugins[pluginType].forEach(plugin => {\n          /* DEBUG STATEMENT */ if (DEBUG_MODE) console.log(`Installing ${plugin.__pluginName} plugin.`)\n          plugin.__install({ $context, $root, $dispatch })\n        })\n      }\n\n      /* DEBUG STATEMENT */ if (DEBUG_MODE) console.log('Running initial update...')\n      $update([ __init(flags, $context.currentTime, $root) ])\n    },\n\n    // Use this to send an Action to the runtime from some external javascript.\n    send (action) {\n      $dispatch(action)\n    }\n  }\n}\n","export const node = (type, properties = [], connections = []) => ({ type, properties, connections })\nexport const ref = key => ({ type: 'RefNode', key })\n\n// export const analyser = (properties, connections) => node('AnalyserNode', properties, connections)\nexport const audioBufferSource = (properties, connections) => node('AudioBufferSourceNode', properties, connections)\nexport const audioDestination = () => node('AudioDestinationNode')\nexport const audioScheduledSource = (properties, connections) => node('AudioScheduledSourceNode', properties, connections)\nexport const biquadFilter = (properties, connections) => node('BiquadFilterNode', properties, connections)\nexport const channelMerger = (properties, connections) => node('ChannelMergerNode', properties, connections)\nexport const channelSplitter = (properties, connections) => node('ChannelSplitterNode', properties, connections)\nexport const constantSource = (properties, connections) => node('ConstantSourceNode', properties, connections)\nexport const convolver = (properties, connections) => node('ConvolverNode', properties, connections)\nexport const delay = (properties, connections) => node('DelayNode', properties, connections)\nexport const dynamicsCompressor = (properties, connections) => node('DynamicsCompressorNode', properties, connections)\nexport const gain = (properties, connections) => node('GainNode', properties, connections)\nexport const iirFilter = (properties, connections) => node('IIRFilterNode', properties, connections)\n// export const mediaElementAudioSource = (properties, connections) => node('MediaElementAudioSourceNode', properties, connections)\n// export const mediaStreamAudioDestination = (properties, connections) => node('MediaStreamAudioDestinationNode', properties, connections)\n// export const mediaStreamAudioSource = (properties, connections) => node('MediaStreamAudioSourceNode', properties, connections)\nexport const oscillator = (properties, connections) => node('OscillatorNode', properties, connections)\nexport const panner = (properties, connections) => node('PannerNode', properties, connections)\nexport const stereoPanner = (properties, connections) => node('StereoPannerNode', properties, connections)\nexport const waveShaper = (properties, connections) => node('WaveShaperNode', properties, connections)\n\nexport const compressor = dynamicsCompressor\nexport const dac = audioDestination\nexport const filter = biquadFilter\nexport const num = constantSource\nexport const osc = oscillator\n\nexport default {\n  // Core\n  node,\n  ref,\n  // Web Audio nodes\n  // analyser,\n  audioBufferSource,\n  audioDestination,\n  audioScheduledSource,\n  biquadFilter,\n  channelMerger,\n  channelSplitter,\n  constantSource,\n  convolver,\n  delay,\n  dynamicsCompressor,\n  gain,\n  iirFilter,\n  // mediaElementAudioSource,\n  // mediaStreamAudioDestination,\n  // mediaStreamAudioSource,\n  oscillator,\n  panner,\n  stereoPanner,\n  waveShaper,\n  // Aliases\n  compressor,\n  dac,\n  filter,\n  num,\n  osc\n}\n","export const property = (type, label, value) => ({ type, label, value })\nexport const scheduledProperty = (method, prop, time) => property('ScheduledAudioParam', prop.label, { method, target: prop.value, time })\n\nexport const setValueAtTime = (property, time) => scheduledProperty('setValueAtTime', property, time)\nexport const linearRampToValueAtTime = (property, time) => scheduledProperty('linearRampToValueAtTime', property, time)\nexport const exponentialRampToValueAtTime = (property, time) => scheduledProperty('exponentialRampToValueAtTime', property, time)\n\nexport const setValuesAtTime = (property, valuesAndTimes) => valuesAndTimes.map(([ value, time ]) => setValueAtTime(property(value), time))\nexport const linearRampToValuesAtTime = (property, valuesAndTimes) => valuesAndTimes.map(([ value, time ]) => linearRampToValueAtTime(property(value), time))\nexport const exponentialRampToValuesAtTime = (property, valuesAndTimes) => valuesAndTimes.map(([ value, time ]) => exponentialRampToValueAtTime(property(value), time))\n\nexport const attack = value => property('AudioParam', 'attack', value)\nexport const coneInnerAngle = value => property('NodeProperty', 'coneInnerAngle', value)\nexport const coneOuterAngle = value => property('NodeProperty', 'coneOuterAngle', value)\nexport const coneOuterGain = value => property('NodeProperty', 'coneOuterGain', value)\nexport const curve = value => property('NodeProperty', 'curve', value)\nexport const delayTime = value => property('AudioParam', 'delayTime', value)\nexport const detune = value => property('AudioParam', 'detune', value)\nexport const distanceModel = value => property('NodeProperty', 'distanceModel', value)\nexport const feedback = value => property('ConstructorProperty', 'feedback', value)\nexport const feedforward = value => property('ConstructorProperty', 'feedforward', value)\nexport const fftSize = value => property('NodeProperty', 'fftSize', value)\nexport const frequency = value => property('AudioParam', 'frequency', value)\nexport const frequencyBinCount = value => property('NodeProperty', 'frequencyBinCount', value)\nexport const gain = value => property('AudioParam', 'gain', value)\nexport const gainAmount = gain\nexport const knee = value => property('AudioParam', 'knee', value)\nexport const loop = value => property('NodeProperty', 'loop', value)\nexport const loopEnd = value => property('NodeProperty', 'loopEnd', value)\nexport const loopStart = value => property('NodeProperty', 'loopStart', value)\nexport const maxChannelCount = value => property('NodeProperty', 'maxChannelCount', value)\nexport const maxDecibels = value => property('NodeProperty', 'maxDecibels', value)\nexport const maxDelayTime = value => property('ConstructorProperty', 'maxDelayTime', value)\nexport const maxDistance = value => property('NodeProperty', 'maxDistance', value)\nexport const mediaElement = value => property('ConstructorProperty', 'mediaElement', value)\nexport const mediaStream = value => property('ConstructorProperty', 'mediaStream', value)\nexport const minDecibels = value => property('NodeProperty', 'minDecibels', value)\nexport const normalize = value => property('NodeProperty', 'normalize', value)\nexport const offset = value => property('AudioParam', 'offset', value)\nexport const orientationX = value => property('AudioParam', 'orientationX', value)\nexport const orientationY = value => property('AudioParam', 'orientationY', value)\nexport const orientationZ = value => property('AudioParam', 'orientationZ', value)\nexport const oversample = value => property('NodeProperty', 'oversample', value)\nexport const pan = value => property('AudioParam', 'pan', value)\nexport const panningModel = value => property('NodeProperty', 'panningModel', value)\nexport const playbackRate = value => property('AudioParam', 'playbackRate', value)\nexport const positionX = value => property('AudioParam', 'positionX', value)\nexport const positionY = value => property('AudioParam', 'positionY', value)\nexport const positionZ = value => property('AudioParam', 'positionZ', value)\nexport const q = value => property('AudioParam', 'Q', value)\nexport const ratio = value => property('AudioParam', 'ratio', value)\nexport const reduction = value => property('AudioParam', 'reduction', value)\nexport const refDistance = value => property('NodeProperty', 'refDistance', value)\nexport const release = value => property('AudioParam', 'release', value)\nexport const rolloffFactor = value => property('NodeProperty', 'rolloffFactor', value)\nexport const smoothingTimeConstant = value => property('NodeProperty', 'smoothingTimeConstant', value)\nexport const stream = value => property('MediaStream', 'stream', value)\nexport const threshold = value => property('AudioParam', 'threshold', value)\nexport const type = value => property('NodeProperty', 'type', value)\n\nexport default {\n  // Core\n  property,\n  scheduledProperty,\n  // Scheduled properties\n  setValueAtTime,\n  linearRampToValueAtTime,\n  exponentialRampToValueAtTime,\n  setValuesAtTime,\n  linearRampToValuesAtTime,\n  exponentialRampToValuesAtTime,\n  // Web Audio properties\n  attack,\n  coneInnerAngle,\n  coneOuterAngle,\n  coneOuterGain,\n  curve,\n  delayTime,\n  detune,\n  distanceModel,\n  feedback,\n  feedforward,\n  fftSize,\n  frequency,\n  frequencyBinCount,\n  gain,\n  gainAmount,\n  knee,\n  loop,\n  loopEnd,\n  loopStart,\n  maxChannelCount,\n  maxDecibels,\n  maxDelayTime,\n  maxDistance,\n  mediaElement,\n  mediaStream,\n  minDecibels,\n  normalize,\n  offset,\n  orientationX,\n  orientationY,\n  orientationZ,\n  oversample,\n  pan,\n  panningModel,\n  playbackRate,\n  positionX,\n  positionY,\n  positionZ,\n  q,\n  ratio,\n  reduction,\n  refDistance,\n  release,\n  rolloffFactor,\n  smoothingTimeConstant,\n  stream,\n  threshold,\n  type\n}\n","import { node } from './node'\n\nexport const keyed = (key, type, properties = [], connections = []) => ({ key, ...node(type, properties, connections) })\nexport const key = (key, node) => ({ key, ...node })\n\nexport const analyser = (key, properties, connections) => keyed(key, 'AnalyserNode', properties, connections)\nexport const audioBufferSource = (key, properties, connections) => keyed(key, 'AudioBufferSourceNode', properties, connections)\nexport const audioScheduledSource = (key, properties, connections) => keyed(key, 'AudioScheduledSourceNode', properties, connections)\nexport const biquadFilter = (key, properties, connections) => keyed(key, 'BiquadFilterNode', properties, connections)\nexport const channelMerger = (key, properties, connections) => keyed(key, 'ChannelMergerNode', properties, connections)\nexport const channelSplitter = (key, properties, connections) => keyed(key, 'ChannelSplitterNode', properties, connections)\nexport const constantSource = (key, properties, connections) => keyed(key, 'ConstantSourceNode', properties, connections)\nexport const convolver = (key, properties, connections) => keyed(key, 'ConvolverNode', properties, connections)\nexport const delay = (key, properties, connections) => keyed(key, 'DelayNode', properties, connections)\nexport const dynamicsCompressor = (key, properties, connections) => keyed(key, 'DynamicsCompressorNode', properties, connections)\nexport const gain = (key, properties, connections) => keyed(key, 'GainNode', properties, connections)\nexport const iirFilter = (key, properties, connections) => keyed(key, 'IIRFilterNode', properties, connections)\nexport const mediaElementAudioSource = (key, properties, connections) => keyed(key, 'MediaElementAudioSourceNode', properties, connections)\nexport const mediaStreamAudioDestination = (key, properties, connections) => keyed(key, 'MediaStreamAudioDestinationNode', properties, connections)\nexport const mediaStreamAudioSource = (key, properties, connections) => keyed(key, 'MediaStreamAudioSourceNode', properties, connections)\nexport const oscillator = (key, properties, connections) => keyed(key, 'OscillatorNode', properties, connections)\nexport const panner = (key, properties, connections) => keyed(key, 'PannerNode', properties, connections)\nexport const stereoPanner = (key, properties, connections) => keyed(key, 'StereoPannerNode', properties, connections)\nexport const waveShaper = (key, properties, connections) => keyed(key, 'WaveShaperNode', properties, connections)\n\nexport const compressor = dynamicsCompressor\nexport const filter = biquadFilter\nexport const num = constantSource\nexport const osc = oscillator\n\nexport default {\n  // Core\n  keyed,\n  key,\n  // Keyed Web Audio nodes\n  analyser,\n  audioBufferSource,\n  audioScheduledSource,\n  biquadFilter,\n  channelMerger,\n  channelSplitter,\n  constantSource,\n  convolver,\n  delay,\n  dynamicsCompressor,\n  gain,\n  iirFilter,\n  mediaElementAudioSource,\n  mediaStreamAudioDestination,\n  mediaStreamAudioSource,\n  oscillator,\n  panner,\n  stereoPanner,\n  waveShaper,\n  // Aliases\n  compressor,\n  filter,\n  num,\n  osc\n}\n","export const event = (type, id, time, handler) => ({ __eventType: 'audio', type, id, time, handler })\n\nexport const every = (id, time, handler) => event('repeat', id, time, handler)\nexport const at = (id, time, handler) => event('once', id, time, handler)\n\nexport default {\n  // Core ======================================================================\n  every,\n  at,\n  // Plugin data ===============================================================\n  // The runtime needs to know what type of plugin to install\n  __pluginType: 'event',\n  // In the future, __pluginName will be used to stop duplicate plugins being\n  // registered.\n  __pluginName: 'Audio.Event',\n  // The event type should match the __eventType of any event objects you want\n  // this plugin to handle.\n  __eventType: 'audio',\n  // Install is called after a program has been started. It is always passed an\n  // object with $context, $root, and $dispatch but a plugin may choose to ignore\n  // any or all of these fields.\n  __install ({ $context, $dispatch }) {\n    this.$context = $context\n    this.$dispatch = $dispatch\n  },\n  // Update is called every time the model is updated, and it receives a filtered\n  // list of all the new event listeners. The list is filtered based on the\n  // __eventType defined above.\n  __update (newEvents) {\n    const oldEvents = Object.keys(this.$events)\n\n    for (let i = 0; i < Math.max(oldEvents.length, newEvents.length); i++) {\n      const newEvent = newEvents[i]\n      const oldEvent = oldEvents[i]\n\n      if (newEvent) {\n        if (this.$events[newEvent.id]) {\n          this.$events[newEvent.id].update(newEvent)\n        } else {\n          this.$events[newEvent.id] = new Event(newEvent, this.$dispatch, this.$context)\n        }\n      } else {\n        this.$events[oldEvent].stop()\n\n        delete this.$events[oldEvent]\n      }\n    }\n  },\n  //\n  $context: null,\n  $dispatch: null,\n  $events: {}\n}\n\n//\nclass Event {\n  constructor ({ type, time, handler }, $dispatch, $context) {\n    this.type = type\n    this.time = time\n    this.handler = handler\n\n    this.interval = 25 // ms\n    this.lookahead = 0.1 // seconds\n\n    this.start($dispatch, $context)\n  }\n\n  start ($dispatch, $context) {\n    this.targetTime = $context.currentTime + this.time\n\n    if (this.type === 'repeat') $dispatch(this.handler($context.currentTime))\n\n    this.timerID = setInterval(() => {\n      const currentTime = $context.currentTime\n\n      if (currentTime >= this.targetTime - this.lookahead) {\n        const diff = this.targetTime - currentTime\n\n        $dispatch(this.handler(currentTime + diff))\n\n        switch (this.type) {\n          case 'repeat':\n            this.targetTime = currentTime + diff + this.time\n            break\n          case 'once':\n            this.stop()\n        }\n      }\n    }, 25)\n  }\n\n  update ({ time, handler }) {\n    if (time) this.time = time\n    if (handler) this.handler = handler\n  }\n\n  stop () {\n    clearInterval(this.timerID)\n  }\n}\n","module.exports={A0:21,\"A#0\":22,Bb0:22,B0:23,C1:24,\"C#1\":25,Db1:25,D1:26,\"D#1\":27,Eb1:27,E1:28,F1:29,\"F#1\":30,Gb1:30,G1:31,\"G#1\":32,Ab1:32,A1:33,\"A#1\":34,Bb1:34,B1:35,C2:36,\"C#2\":37,Db2:37,D2:38,\"D#2\":39,Eb2:39,E2:40,F2:41,\"F#2\":42,Gb2:42,G2:43,\"G#2\":44,Ab2:44,A2:45,\"A#2\":46,Bb2:46,B2:47,C3:48,\"C#3\":49,Cb3:49,D3:50,\"D#3\":51,Eb3:51,E3:52,F3:53,\"F#3\":54,Gb3:54,G3:55,\"G#3\":56,Ab3:56,A3:57,\"A#3\":58,Bb3:58,B3:59,C4:60,\"C#4\":61,Db4:61,D4:62,\"D#4\":63,Eb4:63,E4:64,F4:65,\"F#4\":66,Gb4:66,G4:67,\"G#4\":68,Ab4:68,A4:69,\"A#4\":70,Bb4:70,B4:71,C5:72,\"C#5\":73,Db5:73,D5:74,\"D#5\":75,Eb5:75,E5:76,F5:77,\"F#5\":78,Gb5:78,G5:79,\"G#5\":80,Ab5:80,A5:81,\"A#5\":82,Bb5:82,B5:83,C6:84,\"C#6\":85,Db6:85,D6:86,\"D#6\":87,Eb6:87,E6:88,F6:89,\"F#6\":90,Gb6:90,G6:91,\"G#6\":92,Ab6:92,A6:93,\"A#6\":94,Bb6:94,B6:95,C7:96,\"C#7\":97,Db7:97,D7:98,\"D#7\":99,Eb7:99,E7:100,F7:101,\"F#7\":102,Gb7:102,G7:103,\"G#7\":104,Ab7:104,A7:105,\"A#7\":106,Bb7:106,B7:107,C8:108};","import Notes from './notes.json'\n\n// MIDI note conversions =======================================================\nexport const mton = note => Object.keys(Notes).find(name => Notes[name] === note)\nexport const mtof = note => 440 * Math.pow(2, (note - 69) / 12)\n\n// Note name conversions =======================================================\nexport const ntom = note => note.length === 3\n  ? Notes[note[0].toUpperCase() + note[1].toLowerCase() + note[2]]\n  : Notes[note[0].toUpperCase() + note[1]]\nexport const ntof = note => mtof(ntom(note))\n\n// Frequency conversions =======================================================\nexport const ftom = note => 12 * Math.log2(note / 440) + 69\nexport const fton = note => mton(ftom(note))\n\n//\nexport default {\n  // MIDI note names and numbers\n  Notes,\n  // MIDI note conversions\n  mton,\n  mtof,\n  // Note name conversions\n  ntom,\n  ntof,\n  // Frequency conversions\n  ftom,\n  fton\n}\n","// Tempos ======================================================================\nexport const pretissimo = 200\nexport const presto = 168\nexport const vivace = 140\nexport const allegro = 120\nexport const allegroModera = 112\nexport const moderato = 108\nexport const andante = 78\nexport const adagietto = 70\nexport const adagio = 66\nexport const larghetto = 60\nexport const largo = 50\nexport const lento = 40\nexport const larghissimo = 20\n\n// Time ratios =================================================================\nexport const Whole = 0.25\nexport const HalfDotted = 1 / 3\nexport const Half = 0.5\nexport const HalfTripplet = 0.75\nexport const QuarterDotted = 1 / 3 * 2\nexport const Quarter = 1\nexport const QuarterTripplet = 1.5\nexport const EighthDotted = 1 + 1 / 3\nexport const Eighth = 2\nexport const EighthTripplet = 3\nexport const SixteenthDotted = 2 + 1 / 3 * 2\nexport const Sixteenth = 4\nexport const SixteenthTripplet = 6\nexport const ThirtysecondDotted = 5 + 1 / 3\nexport const Thirtysecond = 8\nexport const ThirtysecondTripplet = 12\n\n// Conversions =================================================================\nexport const ms = (bpm, time) => 1 / (bpm / 60 * time * 0.001)\nexport const sec = (bpm, time) => ms(bpm, time) / 1000\n\n//\nexport default {\n  // Tempos\n  pretissimo,\n  presto,\n  vivace,\n  allegro,\n  allegroModera,\n  moderato,\n  andante,\n  adagietto,\n  adagio,\n  larghetto,\n  largo,\n  lento,\n  larghissimo,\n  // Time ratios\n  Whole,\n  HalfDotted,\n  Half,\n  HalfTripplet,\n  QuarterDotted,\n  Quarter,\n  QuarterTripplet,\n  EighthDotted,\n  Eighth,\n  EighthTripplet,\n  SixteenthDotted,\n  Sixteenth,\n  SixteenthTripplet,\n  ThirtysecondDotted,\n  Thirtysecond,\n  ThirtysecondTripplet,\n  // Conversions\n  ms,\n  sec\n}\n","export const element = (tag, attrs = [], children = []) => ({ tag, attrs, children })\n\nexport const a = (attrs, children) => element('a', attrs, children)\nexport const abbr = (attrs, children) => element('abbr', attrs, children)\nexport const address = (attrs, children) => element('address', attrs, children)\nexport const area = (attrs, children) => element('area', attrs, children)\nexport const article = (attrs, children) => element('article', attrs, children)\nexport const aside = (attrs, children) => element('aside', attrs, children)\nexport const audio = (attrs, children) => element('audio', attrs, children)\nexport const b = (attrs, children) => element('b', attrs, children)\nexport const base = (attrs, children) => element('base', attrs, children)\nexport const bdi = (attrs, children) => element('bdi', attrs, children)\nexport const bdo = (attrs, children) => element('bdo', attrs, children)\nexport const blockquote = (attrs, children) => element('blockquote', attrs, children)\nexport const body = (attrs, children) => element('body', attrs, children)\nexport const br = (attrs, children) => element('br', attrs, children)\nexport const button = (attrs, children) => element('button', attrs, children)\nexport const canvas = (attrs, children) => element('canvas', attrs, children)\nexport const caption = (attrs, children) => element('caption', attrs, children)\nexport const cite = (attrs, children) => element('cite', attrs, children)\nexport const code = (attrs, children) => element('code', attrs, children)\nexport const col = (attrs, children) => element('col', attrs, children)\nexport const colgroup = (attrs, children) => element('colgroup', attrs, children)\nexport const data = (attrs, children) => element('data', attrs, children)\nexport const datalist = (attrs, children) => element('datalist', attrs, children)\nexport const dd = (attrs, children) => element('dd', attrs, children)\nexport const del = (attrs, children) => element('del', attrs, children)\nexport const details = (attrs, children) => element('details', attrs, children)\nexport const dfn = (attrs, children) => element('dfn', attrs, children)\nexport const dialog = (attrs, children) => element('dialog', attrs, children)\nexport const div = (attrs, children) => element('div', attrs, children)\nexport const dl = (attrs, children) => element('dl', attrs, children)\nexport const dt = (attrs, children) => element('dt', attrs, children)\nexport const em = (attrs, children) => element('em', attrs, children)\nexport const embed = (attrs, children) => element('embed', attrs, children)\nexport const fieldset = (attrs, children) => element('fieldset', attrs, children)\nexport const figure = (attrs, children) => element('figure', attrs, children)\nexport const footer = (attrs, children) => element('footer', attrs, children)\nexport const form = (attrs, children) => element('form', attrs, children)\nexport const h1 = (attrs, children) => element('h1', attrs, children)\nexport const h2 = (attrs, children) => element('h2', attrs, children)\nexport const h3 = (attrs, children) => element('h3', attrs, children)\nexport const h4 = (attrs, children) => element('h4', attrs, children)\nexport const h5 = (attrs, children) => element('h5', attrs, children)\nexport const h6 = (attrs, children) => element('h6', attrs, children)\nexport const head = (attrs, children) => element('head', attrs, children)\nexport const header = (attrs, children) => element('header', attrs, children)\nexport const hgroup = (attrs, children) => element('hgroup', attrs, children)\nexport const hr = (attrs, children) => element('hr', attrs, children)\nexport const html = (attrs, children) => element('html', attrs, children)\nexport const i = (attrs, children) => element('i', attrs, children)\nexport const iframe = (attrs, children) => element('iframe', attrs, children)\nexport const img = (attrs, children) => element('img', attrs, children)\nexport const input = (attrs, children) => element('input', attrs, children)\nexport const ins = (attrs, children) => element('ins', attrs, children)\nexport const kbd = (attrs, children) => element('kbd', attrs, children)\nexport const keygen = (attrs, children) => element('keygen', attrs, children)\nexport const label = (attrs, children) => element('label', attrs, children)\nexport const legend = (attrs, children) => element('legend', attrs, children)\nexport const li = (attrs, children) => element('li', attrs, children)\nexport const link = (attrs, children) => element('link', attrs, children)\nexport const main = (attrs, children) => element('main', attrs, children)\nexport const map = (attrs, children) => element('map', attrs, children)\nexport const mark = (attrs, children) => element('mark', attrs, children)\nexport const menu = (attrs, children) => element('menu', attrs, children)\nexport const menuitem = (attrs, children) => element('menuitem', attrs, children)\nexport const meta = (attrs, children) => element('meta', attrs, children)\nexport const meter = (attrs, children) => element('meter', attrs, children)\nexport const nav = (attrs, children) => element('nav', attrs, children)\nexport const noscript = (attrs, children) => element('noscript', attrs, children)\nexport const object = (attrs, children) => element('object', attrs, children)\nexport const ol = (attrs, children) => element('ol', attrs, children)\nexport const optgroup = (attrs, children) => element('optgroup', attrs, children)\nexport const option = (attrs, children) => element('option', attrs, children)\nexport const output = (attrs, children) => element('output', attrs, children)\nexport const p = (attrs, children) => element('p', attrs, children)\nexport const param = (attrs, children) => element('param', attrs, children)\nexport const pre = (attrs, children) => element('pre', attrs, children)\nexport const progress = (attrs, children) => element('progress', attrs, children)\nexport const q = (attrs, children) => element('q', attrs, children)\nexport const rb = (attrs, children) => element('rb', attrs, children)\nexport const rp = (attrs, children) => element('rp', attrs, children)\nexport const rt = (attrs, children) => element('rt', attrs, children)\nexport const rtc = (attrs, children) => element('rtc', attrs, children)\nexport const ruby = (attrs, children) => element('ruby', attrs, children)\nexport const s = (attrs, children) => element('s', attrs, children)\nexport const samp = (attrs, children) => element('samp', attrs, children)\nexport const script = (attrs, children) => element('script', attrs, children)\nexport const section = (attrs, children) => element('section', attrs, children)\nexport const select = (attrs, children) => element('select', attrs, children)\nexport const small = (attrs, children) => element('small', attrs, children)\nexport const source = (attrs, children) => element('source', attrs, children)\nexport const span = (attrs, children) => element('span', attrs, children)\nexport const strong = (attrs, children) => element('strong', attrs, children)\nexport const style = (attrs, children) => element('style', attrs, children)\nexport const sub = (attrs, children) => element('sub', attrs, children)\nexport const summary = (attrs, children) => element('summary', attrs, children)\nexport const sup = (attrs, children) => element('sup', attrs, children)\nexport const table = (attrs, children) => element('table', attrs, children)\nexport const tbody = (attrs, children) => element('tbody', attrs, children)\nexport const td = (attrs, children) => element('td', attrs, children)\nexport const template = (attrs, children) => element('template', attrs, children)\nexport const text = s => `${s}`\nexport const textarea = (attrs, children) => element('textarea', attrs, children)\nexport const tfoot = (attrs, children) => element('tfoot', attrs, children)\nexport const th = (attrs, children) => element('th', attrs, children)\nexport const thead = (attrs, children) => element('thead', attrs, children)\nexport const time = (attrs, children) => element('time', attrs, children)\nexport const title = (attrs, children) => element('title', attrs, children)\nexport const tr = (attrs, children) => element('tr', attrs, children)\nexport const track = (attrs, children) => element('track', attrs, children)\nexport const u = (attrs, children) => element('u', attrs, children)\nexport const ul = (attrs, children) => element('ul', attrs, children)\nexport const var_ = (attrs, children) => element('var', attrs, children)\nexport const video = (attrs, children) => element('video', attrs, children)\nexport const wbr = (attrs, children) => element('wbr', attrs, children)\n\nexport default {\n  // Core\n  element,\n  // HTML elements\n  a,\n  abbr,\n  address,\n  area,\n  article,\n  aside,\n  audio,\n  b,\n  base,\n  bdi,\n  bdo,\n  blockquote,\n  body,\n  br,\n  button,\n  canvas,\n  caption,\n  cite,\n  code,\n  col,\n  colgroup,\n  data,\n  datalist,\n  dd,\n  del,\n  details,\n  dfn,\n  dialog,\n  div,\n  dl,\n  dt,\n  em,\n  embed,\n  fieldset,\n  figure,\n  footer,\n  form,\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6,\n  head,\n  header,\n  hgroup,\n  hr,\n  html,\n  i,\n  iframe,\n  img,\n  input,\n  ins,\n  kbd,\n  keygen,\n  label,\n  legend,\n  li,\n  link,\n  main,\n  map,\n  mark,\n  menu,\n  menuitem,\n  meta,\n  meter,\n  nav,\n  noscript,\n  object,\n  ol,\n  optgroup,\n  option,\n  output,\n  p,\n  param,\n  pre,\n  progress,\n  q,\n  rb,\n  rp,\n  rt,\n  rtc,\n  ruby,\n  s,\n  samp,\n  script,\n  section,\n  select,\n  small,\n  source,\n  span,\n  strong,\n  style,\n  sub,\n  summary,\n  sup,\n  table,\n  tbody,\n  td,\n  template,\n  text,\n  textarea,\n  tfoot,\n  th,\n  thead,\n  time,\n  title,\n  tr,\n  track,\n  u,\n  ul,\n  var_,\n  video,\n  wbr\n}\n","export const attribute = (name, value) => ({ name, value })\n\nexport const accept = value => attribute('accept', value)\nexport const acceptCharset = value => attribute('accept-charset', value)\nexport const accesskey = value => attribute('accesskey', value)\nexport const action = value => attribute('action', value)\nexport const align = value => attribute('align', value)\nexport const allow = value => attribute('allow', value)\nexport const alt = value => attribute('alt', value)\nexport const async = value => attribute('async', value)\nexport const autocapitalize = value => attribute('autocapitalize', value)\nexport const autocomplete = value => attribute('autocomplete', value)\nexport const autofocus = value => attribute('autofocus', value)\nexport const autoplay = value => attribute('autoplay', value)\nexport const buffered = value => attribute('buffered', value)\nexport const challenge = value => attribute('challenge', value)\nexport const charset = value => attribute('charset', value)\nexport const checked = value => attribute('checked', value)\nexport const cite = value => attribute('cite', value)\nexport const className = value => attribute('class', value)\nexport const code = value => attribute('code', value)\nexport const codebase = value => attribute('codebase', value)\nexport const color = value => attribute('color', value)\nexport const cols = value => attribute('cols', value)\nexport const colspan = value => attribute('colspan', value)\nexport const content = value => attribute('content', value)\nexport const contenteditable = value => attribute('contenteditable', value)\nexport const contextmenu = value => attribute('contextmenu', value)\nexport const controls = value => attribute('controls', value)\nexport const coords = value => attribute('coords', value)\nexport const crossorigin = value => attribute('crossorigin', value)\nexport const csp = value => attribute('csp', value)\nexport const data = value => attribute('data', value)\nexport const dataCustom = (name, value) => attribute(`data-${name}`, value)\nexport const datetime = value => attribute('datetime', value)\nexport const decoding = value => attribute('decoding', value)\nexport const default_ = value => attribute('default', value)\nexport const defer = value => attribute('defer', value)\nexport const dir = value => attribute('dir', value)\nexport const dirname = value => attribute('dirname', value)\nexport const disabled = value => attribute('disabled', value)\nexport const download = value => attribute('download', value)\nexport const draggable = value => attribute('draggable', value)\nexport const dropzone = value => attribute('dropzone', value)\nexport const enctype = value => attribute('enctype', value)\nexport const for_ = value => attribute('for', value)\nexport const form = value => attribute('form', value)\nexport const formaction = value => attribute('formaction', value)\nexport const headers = value => attribute('headers', value)\nexport const height = value => attribute('height', value)\nexport const hidden = value => attribute('hidden', value)\nexport const high = value => attribute('high', value)\nexport const href = value => attribute('href', value)\nexport const hreflang = value => attribute('hreflang', value)\nexport const httpEquiv = value => attribute('http-equiv', value)\nexport const icon = value => attribute('icon', value)\nexport const id = value => attribute('id', value)\nexport const importance = value => attribute('importance', value)\nexport const integrity = value => attribute('integrity', value)\nexport const ismap = value => attribute('ismap', value)\nexport const itemprop = value => attribute('itemprop', value)\nexport const keytype = value => attribute('keytype', value)\nexport const kind = value => attribute('kind', value)\nexport const label = value => attribute('label', value)\nexport const lang = value => attribute('lang', value)\nexport const language = value => attribute('language', value)\nexport const lazyload = value => attribute('lazyload', value)\nexport const list = value => attribute('list', value)\nexport const loop = value => attribute('loop', value)\nexport const low = value => attribute('low', value)\nexport const manifest = value => attribute('manifest', value)\nexport const max = value => attribute('max', value)\nexport const maxlength = value => attribute('maxlength', value)\nexport const minlength = value => attribute('minlength', value)\nexport const media = value => attribute('media', value)\nexport const method = value => attribute('method', value)\nexport const min = value => attribute('min', value)\nexport const multiple = value => attribute('multiple', value)\nexport const muted = value => attribute('muted', value)\nexport const name = value => attribute('name', value)\nexport const novalidate = value => attribute('novalidate', value)\nexport const open = value => attribute('open', value)\nexport const optimum = value => attribute('optimum', value)\nexport const pattern = value => attribute('pattern', value)\nexport const ping = value => attribute('ping', value)\nexport const placeholder = value => attribute('placeholder', value)\nexport const poster = value => attribute('poster', value)\nexport const preload = value => attribute('preload', value)\nexport const radiogroup = value => attribute('radiogroup', value)\nexport const readonly = value => attribute('readonly', value)\nexport const referrerpolicy = value => attribute('referrerpolicy', value)\nexport const rel = value => attribute('rel', value)\nexport const required = value => attribute('required', value)\nexport const reversed = value => attribute('reversed', value)\nexport const rows = value => attribute('rows', value)\nexport const rowspan = value => attribute('rowspan', value)\nexport const sandbox = value => attribute('sandbox', value)\nexport const scope = value => attribute('scope', value)\nexport const scoped = value => attribute('scoped', value)\nexport const selected = value => attribute('selected', value)\nexport const shape = value => attribute('shape', value)\nexport const size = value => attribute('size', value)\nexport const sizes = value => attribute('sizes', value)\nexport const slot = value => attribute('slot', value)\nexport const span = value => attribute('span', value)\nexport const spellcheck = value => attribute('spellcheck', value)\nexport const src = value => attribute('src', value)\nexport const srcdoc = value => attribute('srcdoc', value)\nexport const srclang = value => attribute('srclang', value)\nexport const srcset = value => attribute('srcset', value)\nexport const start = value => attribute('start', value)\nexport const step = value => attribute('step', value)\nexport const style = value => attribute('style', value)\nexport const summary = value => attribute('summary', value)\nexport const tabindex = value => attribute('tabindex', value)\nexport const target = value => attribute('target', value)\nexport const title = value => attribute('title', value)\nexport const translate = value => attribute('translate', value)\nexport const type = value => attribute('type', value)\nexport const usemap = value => attribute('usemap', value)\nexport const value = value => attribute('value', value)\nexport const width = value => attribute('width', value)\nexport const wrap = value => attribute('wrap', value)\n\nexport default {\n  // Core\n  attribute,\n  // HTML attributes\n  accept,\n  acceptCharset,\n  accesskey,\n  action,\n  align,\n  allow,\n  alt,\n  async,\n  autocapitalize,\n  autocomplete,\n  autofocus,\n  autoplay,\n  buffered,\n  challenge,\n  charset,\n  checked,\n  cite,\n  className,\n  code,\n  codebase,\n  color,\n  cols,\n  colspan,\n  content,\n  contenteditable,\n  contextmenu,\n  controls,\n  coords,\n  crossorigin,\n  csp,\n  data,\n  dataCustom,\n  datetime,\n  decoding,\n  default_,\n  defer,\n  dir,\n  dirname,\n  disabled,\n  download,\n  draggable,\n  dropzone,\n  enctype,\n  for_,\n  form,\n  formaction,\n  headers,\n  height,\n  hidden,\n  high,\n  href,\n  hreflang,\n  httpEquiv,\n  icon,\n  id,\n  importance,\n  integrity,\n  ismap,\n  itemprop,\n  keytype,\n  kind,\n  label,\n  lang,\n  language,\n  lazyload,\n  list,\n  loop,\n  low,\n  manifest,\n  max,\n  maxlength,\n  minlength,\n  media,\n  method,\n  min,\n  multiple,\n  muted,\n  name,\n  novalidate,\n  open,\n  optimum,\n  pattern,\n  ping,\n  placeholder,\n  poster,\n  preload,\n  radiogroup,\n  readonly,\n  referrerpolicy,\n  rel,\n  required,\n  reversed,\n  rows,\n  rowspan,\n  sandbox,\n  scope,\n  scoped,\n  selected,\n  shape,\n  size,\n  sizes,\n  slot,\n  span,\n  spellcheck,\n  src,\n  srcdoc,\n  srclang,\n  srcset,\n  start,\n  step,\n  style,\n  summary,\n  tabindex,\n  target,\n  title,\n  translate,\n  type,\n  usemap,\n  value,\n  width,\n  wrap\n}\n","export const event = (selector, eventName, handler, opts = {}) => ({\n  __eventType: 'DOM', selector, eventName, handler, opts\n})\n\n// MOST COMMON EVENTS -------------------------------------------------------\n// Focus events\nexport const focus = (selector, handler, opts) => event(selector, 'focus', handler, opts)\nexport const blur = (selector, handler, opts) => event(selector, 'blur', handler, opts)\n\n// Form events\nexport const reset = (selector, handler, opts) => event(selector, 'reset', handler, opts)\nexport const submit = (selector, handler, opts) => event(selector, 'submit', handler, opts)\n\n// View events\nexport const fullscreenchange = (selector, handler, opts) => event(selector, 'fullscreenchange', handler, opts)\nexport const fullscreenerror = (selector, handler, opts) => event(selector, 'fullscreenerror', handler, opts)\nexport const resize = (selector, handler, opts) => event(selector, 'resize', handler, opts)\nexport const scroll = (selector, handler, opts) => event(selector, 'scroll', handler, opts)\n\n// Clipboard events\nexport const cut = (selector, handler, opts) => event(selector, 'cut', handler, opts)\nexport const copy = (selector, handler, opts) => event(selector, 'copy', handler, opts)\nexport const paste = (selector, handler, opts) => event(selector, 'paste', handler, opts)\n\n// Keyboard events\nexport const keydown = (selector, handler, opts) => event(selector, 'keydown', handler, opts)\nexport const keypress = (selector, handler, opts) => event(selector, 'keypress', handler, opts)\nexport const keyup = (selector, handler, opts) => event(selector, 'keyup', handler, opts)\n\n// Mouse events\nexport const auxclick = (selector, handler, opts) => event(selector, 'auxclick', handler, opts)\nexport const click = (selector, handler, opts) => event(selector, 'click', handler, opts)\nexport const contextmenu = (selector, handler, opts) => event(selector, 'contextmenu', handler, opts)\nexport const dblclick = (selector, handler, opts) => event(selector, 'dblclick', handler, opts)\nexport const mousedown = (selector, handler, opts) => event(selector, 'mousedown', handler, opts)\nexport const mouseenter = (selector, handler, opts) => event(selector, 'mouseenter', handler, opts)\nexport const mouseleave = (selector, handler, opts) => event(selector, 'mouseleave', handler, opts)\nexport const mousemove = (selector, handler, opts) => event(selector, 'mousemove', handler, opts)\n\nexport const mouseover = (selector, handler, opts) => event(selector, 'mouseover', handler, opts)\nexport const mouseout = (selector, handler, opts) => event(selector, 'mouseout', handler, opts)\nexport const mouseup = (selector, handler, opts) => event(selector, 'mouseup', handler, opts)\nexport const pointerlockchange = (selector, handler, opts) => event(selector, 'pointerlockchange', handler, opts)\nexport const pointerlockerror = (selector, handler, opts) => event(selector, 'pointerlockerror', handler, opts)\nexport const select = (selector, handler, opts) => event(selector, 'select', handler, opts)\nexport const wheel = (selector, handler, opts) => event(selector, 'wheel', handler, opts)\n\n// Drag & Drop events\nexport const drag = (selector, handler, opts) => event(selector, 'drag', handler, opts)\nexport const dragend = (selector, handler, opts) => event(selector, 'dragend', handler, opts)\nexport const dragenter = (selector, handler, opts) => event(selector, 'dragenter', handler, opts)\nexport const dragstart = (selector, handler, opts) => event(selector, 'dragstart', handler, opts)\nexport const dragleave = (selector, handler, opts) => event(selector, 'dragleave', handler, opts)\nexport const dragover = (selector, handler, opts) => event(selector, 'dragover', handler, opts)\nexport const drop = (selector, handler, opts) => event(selector, 'drop', handler, opts)\n\n// Value change events\nexport const broadcast = (selector, handler, opts) => event(selector, 'broadcast', handler, opts)\nexport const CheckboxStateChange = (selector, handler, opts) => event(selector, 'CheckboxStateChange', handler, opts)\nexport const hashchange = (selector, handler, opts) => event(selector, 'hashchange', handler, opts)\nexport const input = (selector, handler, opts) => event(selector, 'input', handler, opts)\nexport const RadioStateChange = (selector, handler, opts) => event(selector, 'RadioStateChange', handler, opts)\nexport const readystatechange = (selector, handler, opts) => event(selector, 'readystatechange', handler, opts)\nexport const ValueChange = (selector, handler, opts) => event(selector, 'ValueChange', handler, opts)\n\n// LESS COMMON EVENTS -------------------------------------------------------\n// Sensor events\nexport const compassneedscalibration = (selector, handler, opts) => event(selector, 'compassneedscalibration', handler, opts)\nexport const devicelight = (selector, handler, opts) => event(selector, 'devicelight', handler, opts)\nexport const devicemotion = (selector, handler, opts) => event(selector, 'devicemotion', handler, opts)\nexport const deviceorientation = (selector, handler, opts) => event(selector, 'deviceorientation', handler, opts)\nexport const deviceproximity = (selector, handler, opts) => event(selector, 'deviceproximity', handler, opts)\nexport const orientationchange = (selector, handler, opts) => event(selector, 'orientationchange', handler, opts)\nexport const userproximity = (selector, handler, opts) => event(selector, 'userproximity', handler, opts)\n\n// Touch events\nexport const touchcancel = (selector, handler, opts) => event(selector, 'touchcancel', handler, opts)\nexport const touchend = (selector, handler, opts) => event(selector, 'touchend', handler, opts)\nexport const touchenter = (selector, handler, opts) => event(selector, 'touchenter', handler, opts)\nexport const touchleave = (selector, handler, opts) => event(selector, 'touchleave', handler, opts)\nexport const touchmove = (selector, handler, opts) => event(selector, 'touchmove', handler, opts)\nexport const touchstart = (selector, handler, opts) => event(selector, 'touchstart', handler, opts)\n\n// Pointer events\nexport const pointerover = (selector, handler, opts) => event(selector, 'pointerover', handler, opts)\nexport const pointerenter = (selector, handler, opts) => event(selector, 'pointerenter', handler, opts)\nexport const pointerdown = (selector, handler, opts) => event(selector, 'pointerdown', handler, opts)\nexport const pointermove = (selector, handler, opts) => event(selector, 'pointermove', handler, opts)\nexport const pointerup = (selector, handler, opts) => event(selector, 'pointerup', handler, opts)\nexport const pointercancel = (selector, handler, opts) => event(selector, 'pointercancel', handler, opts)\nexport const pointerout = (selector, handler, opts) => event(selector, 'pointerout', handler, opts)\nexport const pointerleave = (selector, handler, opts) => event(selector, 'pointerleave', handler, opts)\nexport const gotpointercapture = (selector, handler, opts) => event(selector, 'gotpointercapture', handler, opts)\nexport const lostpointercapture = (selector, handler, opts) => event(selector, 'lostpointercapture', handler, opts)\n\n//\nexport default {\n  // Core ======================================================================\n  event,\n  // Focus events\n  focus,\n  blur,\n  // Form events\n  reset,\n  submit,\n  // View events\n  fullscreenchange,\n  fullscreenerror,\n  resize,\n  scroll,\n  // Clipboard events\n  cut,\n  copy,\n  paste,\n  // Keyboard events\n  keydown,\n  keypress,\n  keyup,\n  // Mouse events\n  auxclick,\n  click,\n  contextmenu,\n  dblclick,\n  mousedown,\n  mouseenter,\n  mouseleave,\n  mousemove,\n  mouseover,\n  mouseout,\n  mouseup,\n  pointerlockchange,\n  pointerlockerror,\n  select,\n  wheel,\n  // Drag & Drop events\n  drag,\n  dragend,\n  dragenter,\n  dragstart,\n  dragleave,\n  dragover,\n  drop,\n  // Value change events\n  broadcast,\n  CheckboxStateChange,\n  hashchange,\n  input,\n  RadioStateChange,\n  readystatechange,\n  ValueChange,\n  // Sensor events\n  compassneedscalibration,\n  devicelight,\n  devicemotion,\n  deviceorientation,\n  deviceproximity,\n  orientationchange,\n  userproximity,\n  // Touch events\n  touchcancel,\n  touchend,\n  touchenter,\n  touchleave,\n  touchmove,\n  touchstart,\n  // Pointer events\n  pointerover,\n  pointerenter,\n  pointerdown,\n  pointermove,\n  pointerup,\n  pointercancel,\n  pointerout,\n  pointerleave,\n  gotpointercapture,\n  lostpointercapture,\n  // Plugin data ===============================================================\n  // The runtime needs to know what type of plugin to install\n  __pluginType: 'event',\n  // In the future, __pluginName will be used to stop duplicate plugins being\n  // registered.\n  __pluginName: 'Html.Event',\n  // The event type should match the __eventType of any event objects you want\n  // this plugin to handle.\n  __eventType: 'DOM',\n  // Install is called after a program has been started. It is always passed an\n  // object with $context, $root, and $dispatch but a plugin may choose to ignore\n  // any or all of these fields.\n  __install ({ $dispatch }) {\n    this.$dispatch = $dispatch\n\n    events.forEach(event => {\n      this.$events[event] = []\n\n      window.addEventListener(event, e => {\n        this.$events[event].forEach(({ selector, handler }) => {\n          if (this.$isGlobal(selector) || e.target.matches(selector)) {\n            handler(e)\n          }\n        })\n      })\n    })\n  },\n  // Update is called every time the model is updated, and it receives a filtered\n  // list of all the new event listeners. The list is filtered based on the\n  // __eventType defined above.\n  __update (newEvents) {\n    newEvents = newEvents.map(event => {\n      const handler = e => this.$dispatch(event.handler(e))\n      const selector = event.opts.specific || this.$isGlobal(event.selector)\n        ? event.selector\n        : `${event.selector}, ${event.selector} > *`\n\n      return { ...event, handler, selector }\n    })\n\n    for (const event in this.$events) {\n      this.$events[event] = newEvents.filter(({ eventName }) =>\n        eventName === event\n      )\n    }\n  },\n  //\n  $dispatch: null,\n  $events: {},\n  $isGlobal (selector) {\n    return selector === 'document' || selector === 'window'\n  }\n}\n\nconst events = [\n  // Focus events\n  'focus', 'blur',\n  // Form events\n  'reset', 'submit',\n  // View events\n  'fullscreenchange', 'fullscreenerror', 'resize', 'scroll',\n  // Clipboard events\n  'cut', 'copy', 'paste',\n  // Keyboard events\n  'keydown', 'keypress', 'keyup',\n  // Mouse events\n  'auxclick', 'click', 'contextmenu', 'dblclick', 'mousedown', 'mouseenter',\n  'mouseleave', 'mousemove', 'mouseover', 'mouseout', 'mouseup', 'pointerlockchange',\n  'pointerlockerror', 'select', 'wheel',\n  // Drag & Drop events\n  'drag', 'dragend', 'dragenter', 'dragstart', 'dragleave', 'dragover', 'drop',\n  // Value change events\n  'broadcast', 'CheckboxStateChange', 'hashchange', 'input', 'RadioStateChange',\n  'readystatechange', 'ValueChange',\n  // Sensor events\n  'compassneedscalibration', 'devicelight', 'devicemotion', 'deviceorientation',\n  'deviceproximity', 'orientationchange', 'userproximity',\n  // Touch events\n  'touchcancel', 'touchend', 'touchenter', 'touchleave', 'touchmove', 'touchstart',\n  // Pointer events\n  'pointerover', 'pointerenter', 'pointerdown', 'pointermove', 'pointerup',\n  'pointercancel', 'pointerout', 'pointerleave', 'gotpointercapture',\n  'lostpointercapture'\n]\n","//\nimport instrument from './program/instrument'\n//\nimport Node from './audio/node'\nimport Property from './audio/property'\nimport Keyed from './audio/keyed'\nimport AudioEvent from './audio/event'\n//\nimport Note from './music/note'\nimport Time from './music/time'\n//\nimport Element from './dom/element'\nimport Attribute from './dom/attribute'\nimport DOMEvent from './dom/event'\n\nexport const Program = { instrument }\nexport const Audio = { Node, Property, Keyed, Event: AudioEvent }\nexport const DOM = { Element, Attribute, Event: DOMEvent }\nexport const Music = { Note, Time }\n\nexport default {\n  Program,\n  Audio,\n  DOM,\n  Music\n}\n"]}