{"version":3,"sources":["dom/event.js"],"names":["event","selector","eventName","handler","__eventType","opts","focus","blur","reset","submit","fullscreenchange","fullscreenerror","resize","scroll","cut","copy","paste","keydown","keypress","keyup","auxclick","click","contextmenu","dblclick","mousedown","mouseenter","mouseleave","mousemove","mouseover","mouseout","mouseup","pointerlockchange","pointerlockerror","select","wheel","drag","dragend","dragenter","dragstart","dragleave","dragover","drop","broadcast","CheckboxStateChange","hashchange","input","RadioStateChange","readystatechange","ValueChange","compassneedscalibration","devicelight","devicemotion","deviceorientation","deviceproximity","orientationchange","userproximity","touchcancel","touchend","touchenter","touchleave","touchmove","touchstart","pointerover","pointerenter","pointerdown","pointermove","pointerup","pointercancel","pointerout","pointerleave","gotpointercapture","lostpointercapture","__pluginType","__pluginName","__install","$dispatch","events","forEach","$events","window","addEventListener","e","$isGlobal","target","matches","__update","newEvents","map","specific","filter"],"mappings":";AAsOA,aAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,KAAA,GAAA,GAAA,OAAA,sBAAA,CAAA,IAAA,EAAA,OAAA,sBAAA,GAAA,IAAA,EAAA,EAAA,OAAA,SAAA,GAAA,OAAA,OAAA,yBAAA,EAAA,GAAA,cAAA,EAAA,KAAA,MAAA,EAAA,GAAA,OAAA,EAAA,SAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,UAAA,OAAA,IAAA,CAAA,IAAA,EAAA,MAAA,UAAA,GAAA,UAAA,GAAA,GAAA,EAAA,EAAA,EAAA,GAAA,GAAA,QAAA,SAAA,GAAA,EAAA,EAAA,EAAA,EAAA,MAAA,OAAA,0BAAA,OAAA,iBAAA,EAAA,OAAA,0BAAA,IAAA,EAAA,GAAA,QAAA,SAAA,GAAA,OAAA,eAAA,EAAA,EAAA,OAAA,yBAAA,EAAA,MAAA,OAAA,EAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,KAAA,EAAA,OAAA,eAAA,EAAA,EAAA,CAAA,MAAA,EAAA,YAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,GAAA,EAAA,EAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,QAAA,QAAA,mBAAA,QAAA,kBAAA,QAAA,aAAA,QAAA,WAAA,QAAA,cAAA,QAAA,UAAA,QAAA,YAAA,QAAA,YAAA,QAAA,aAAA,QAAA,YAAA,QAAA,WAAA,QAAA,UAAA,QAAA,WAAA,QAAA,WAAA,QAAA,SAAA,QAAA,YAAA,QAAA,cAAA,QAAA,kBAAA,QAAA,gBAAA,QAAA,kBAAA,QAAA,aAAA,QAAA,YAAA,QAAA,wBAAA,QAAA,YAAA,QAAA,iBAAA,QAAA,iBAAA,QAAA,MAAA,QAAA,WAAA,QAAA,oBAAA,QAAA,UAAA,QAAA,KAAA,QAAA,SAAA,QAAA,UAAA,QAAA,UAAA,QAAA,UAAA,QAAA,QAAA,QAAA,KAAA,QAAA,MAAA,QAAA,OAAA,QAAA,iBAAA,QAAA,kBAAA,QAAA,QAAA,QAAA,SAAA,QAAA,UAAA,QAAA,UAAA,QAAA,WAAA,QAAA,WAAA,QAAA,UAAA,QAAA,SAAA,QAAA,YAAA,QAAA,MAAA,QAAA,SAAA,QAAA,MAAA,QAAA,SAAA,QAAA,QAAA,QAAA,MAAA,QAAA,KAAA,QAAA,IAAA,QAAA,OAAA,QAAA,OAAA,QAAA,gBAAA,QAAA,iBAAA,QAAA,OAAA,QAAA,MAAA,QAAA,KAAA,QAAA,MAAA,QAAA,WAAA,EAtOO,IAAMA,EAAQ,SAACC,EAAUC,EAAWC,GAAwB,MAAA,CACjEC,YAAa,MAAOH,SAAAA,EAAUC,UAAAA,EAAWC,QAAAA,EAASE,KADO,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,KAsO3D,QAAA,MAAA,EAhOO,IAAMC,EAAQ,SAACL,EAAUE,EAASE,GAASL,OAAAA,EAAMC,EAAU,QAASE,EAASE,IAgOpF,QAAA,MAAA,EA/NO,IAAME,EAAO,SAACN,EAAUE,EAASE,GAASL,OAAAA,EAAMC,EAAU,OAAQE,EAASE,IA+NlF,QAAA,KAAA,EA5NO,IAAMG,EAAQ,SAACP,EAAUE,EAASE,GAASL,OAAAA,EAAMC,EAAU,QAASE,EAASE,IA4NpF,QAAA,MAAA,EA3NO,IAAMI,EAAS,SAACR,EAAUE,EAASE,GAASL,OAAAA,EAAMC,EAAU,SAAUE,EAASE,IA2NtF,QAAA,OAAA,EAxNO,IAAMK,EAAmB,SAACT,EAAUE,EAASE,GAASL,OAAAA,EAAMC,EAAU,mBAAoBE,EAASE,IAwN1G,QAAA,iBAAA,EAvNO,IAAMM,EAAkB,SAACV,EAAUE,EAASE,GAASL,OAAAA,EAAMC,EAAU,kBAAmBE,EAASE,IAuNxG,QAAA,gBAAA,EAtNO,IAAMO,EAAS,SAACX,EAAUE,EAASE,GAASL,OAAAA,EAAMC,EAAU,SAAUE,EAASE,IAsNtF,QAAA,OAAA,EArNO,IAAMQ,EAAS,SAACZ,EAAUE,EAASE,GAASL,OAAAA,EAAMC,EAAU,SAAUE,EAASE,IAqNtF,QAAA,OAAA,EAlNO,IAAMS,EAAM,SAACb,EAAUE,EAASE,GAASL,OAAAA,EAAMC,EAAU,MAAOE,EAASE,IAkNhF,QAAA,IAAA,EAjNO,IAAMU,EAAO,SAACd,EAAUE,EAASE,GAASL,OAAAA,EAAMC,EAAU,OAAQE,EAASE,IAiNlF,QAAA,KAAA,EAhNO,IAAMW,EAAQ,SAACf,EAAUE,EAASE,GAASL,OAAAA,EAAMC,EAAU,QAASE,EAASE,IAgNpF,QAAA,MAAA,EA7MO,IAAMY,EAAU,SAAChB,EAAUE,EAASE,GAASL,OAAAA,EAAMC,EAAU,UAAWE,EAASE,IA6MxF,QAAA,QAAA,EA5MO,IAAMa,EAAW,SAACjB,EAAUE,EAASE,GAASL,OAAAA,EAAMC,EAAU,WAAYE,EAASE,IA4M1F,QAAA,SAAA,EA3MO,IAAMc,EAAQ,SAAClB,EAAUE,EAASE,GAASL,OAAAA,EAAMC,EAAU,QAASE,EAASE,IA2MpF,QAAA,MAAA,EAxMO,IAAMe,EAAW,SAACnB,EAAUE,EAASE,GAASL,OAAAA,EAAMC,EAAU,WAAYE,EAASE,IAwM1F,QAAA,SAAA,EAvMO,IAAMgB,EAAQ,SAACpB,EAAUE,EAASE,GAASL,OAAAA,EAAMC,EAAU,QAASE,EAASE,IAuMpF,QAAA,MAAA,EAtMO,IAAMiB,EAAc,SAACrB,EAAUE,EAASE,GAASL,OAAAA,EAAMC,EAAU,cAAeE,EAASE,IAsMhG,QAAA,YAAA,EArMO,IAAMkB,EAAW,SAACtB,EAAUE,EAASE,GAASL,OAAAA,EAAMC,EAAU,WAAYE,EAASE,IAqM1F,QAAA,SAAA,EApMO,IAAMmB,EAAY,SAACvB,EAAUE,EAASE,GAASL,OAAAA,EAAMC,EAAU,YAAaE,EAASE,IAoM5F,QAAA,UAAA,EAnMO,IAAMoB,EAAa,SAACxB,EAAUE,EAASE,GAASL,OAAAA,EAAMC,EAAU,aAAcE,EAASE,IAmM9F,QAAA,WAAA,EAlMO,IAAMqB,EAAa,SAACzB,EAAUE,EAASE,GAASL,OAAAA,EAAMC,EAAU,aAAcE,EAASE,IAkM9F,QAAA,WAAA,EAjMO,IAAMsB,EAAY,SAAC1B,EAAUE,EAASE,GAASL,OAAAA,EAAMC,EAAU,YAAaE,EAASE,IAiM5F,QAAA,UAAA,EA/LO,IAAMuB,EAAY,SAAC3B,EAAUE,EAASE,GAASL,OAAAA,EAAMC,EAAU,YAAaE,EAASE,IA+L5F,QAAA,UAAA,EA9LO,IAAMwB,EAAW,SAAC5B,EAAUE,EAASE,GAASL,OAAAA,EAAMC,EAAU,WAAYE,EAASE,IA8L1F,QAAA,SAAA,EA7LO,IAAMyB,EAAU,SAAC7B,EAAUE,EAASE,GAASL,OAAAA,EAAMC,EAAU,UAAWE,EAASE,IA6LxF,QAAA,QAAA,EA5LO,IAAM0B,EAAoB,SAAC9B,EAAUE,EAASE,GAASL,OAAAA,EAAMC,EAAU,oBAAqBE,EAASE,IA4L5G,QAAA,kBAAA,EA3LO,IAAM2B,EAAmB,SAAC/B,EAAUE,EAASE,GAASL,OAAAA,EAAMC,EAAU,mBAAoBE,EAASE,IA2L1G,QAAA,iBAAA,EA1LO,IAAM4B,EAAS,SAAChC,EAAUE,EAASE,GAASL,OAAAA,EAAMC,EAAU,SAAUE,EAASE,IA0LtF,QAAA,OAAA,EAzLO,IAAM6B,EAAQ,SAACjC,EAAUE,EAASE,GAASL,OAAAA,EAAMC,EAAU,QAASE,EAASE,IAyLpF,QAAA,MAAA,EAtLO,IAAM8B,EAAO,SAAClC,EAAUE,EAASE,GAASL,OAAAA,EAAMC,EAAU,OAAQE,EAASE,IAsLlF,QAAA,KAAA,EArLO,IAAM+B,EAAU,SAACnC,EAAUE,EAASE,GAASL,OAAAA,EAAMC,EAAU,UAAWE,EAASE,IAqLxF,QAAA,QAAA,EApLO,IAAMgC,EAAY,SAACpC,EAAUE,EAASE,GAASL,OAAAA,EAAMC,EAAU,YAAaE,EAASE,IAoL5F,QAAA,UAAA,EAnLO,IAAMiC,EAAY,SAACrC,EAAUE,EAASE,GAASL,OAAAA,EAAMC,EAAU,YAAaE,EAASE,IAmL5F,QAAA,UAAA,EAlLO,IAAMkC,EAAY,SAACtC,EAAUE,EAASE,GAASL,OAAAA,EAAMC,EAAU,YAAaE,EAASE,IAkL5F,QAAA,UAAA,EAjLO,IAAMmC,EAAW,SAACvC,EAAUE,EAASE,GAASL,OAAAA,EAAMC,EAAU,WAAYE,EAASE,IAiL1F,QAAA,SAAA,EAhLO,IAAMoC,EAAO,SAACxC,EAAUE,EAASE,GAASL,OAAAA,EAAMC,EAAU,OAAQE,EAASE,IAgLlF,QAAA,KAAA,EA7KO,IAAMqC,EAAY,SAACzC,EAAUE,EAASE,GAASL,OAAAA,EAAMC,EAAU,YAAaE,EAASE,IA6K5F,QAAA,UAAA,EA5KO,IAAMsC,EAAsB,SAAC1C,EAAUE,EAASE,GAASL,OAAAA,EAAMC,EAAU,sBAAuBE,EAASE,IA4KhH,QAAA,oBAAA,EA3KO,IAAMuC,EAAa,SAAC3C,EAAUE,EAASE,GAASL,OAAAA,EAAMC,EAAU,aAAcE,EAASE,IA2K9F,QAAA,WAAA,EA1KO,IAAMwC,EAAQ,SAAC5C,EAAUE,EAASE,GAASL,OAAAA,EAAMC,EAAU,QAASE,EAASE,IA0KpF,QAAA,MAAA,EAzKO,IAAMyC,EAAmB,SAAC7C,EAAUE,EAASE,GAASL,OAAAA,EAAMC,EAAU,mBAAoBE,EAASE,IAyK1G,QAAA,iBAAA,EAxKO,IAAM0C,EAAmB,SAAC9C,EAAUE,EAASE,GAASL,OAAAA,EAAMC,EAAU,mBAAoBE,EAASE,IAwK1G,QAAA,iBAAA,EAvKO,IAAM2C,EAAc,SAAC/C,EAAUE,EAASE,GAASL,OAAAA,EAAMC,EAAU,cAAeE,EAASE,IAuKhG,QAAA,YAAA,EAnKO,IAAM4C,EAA0B,SAAChD,EAAUE,EAASE,GAASL,OAAAA,EAAMC,EAAU,0BAA2BE,EAASE,IAmKxH,QAAA,wBAAA,EAlKO,IAAM6C,EAAc,SAACjD,EAAUE,EAASE,GAASL,OAAAA,EAAMC,EAAU,cAAeE,EAASE,IAkKhG,QAAA,YAAA,EAjKO,IAAM8C,EAAe,SAAClD,EAAUE,EAASE,GAASL,OAAAA,EAAMC,EAAU,eAAgBE,EAASE,IAiKlG,QAAA,aAAA,EAhKO,IAAM+C,EAAoB,SAACnD,EAAUE,EAASE,GAASL,OAAAA,EAAMC,EAAU,oBAAqBE,EAASE,IAgK5G,QAAA,kBAAA,EA/JO,IAAMgD,EAAkB,SAACpD,EAAUE,EAASE,GAASL,OAAAA,EAAMC,EAAU,kBAAmBE,EAASE,IA+JxG,QAAA,gBAAA,EA9JO,IAAMiD,EAAoB,SAACrD,EAAUE,EAASE,GAASL,OAAAA,EAAMC,EAAU,oBAAqBE,EAASE,IA8J5G,QAAA,kBAAA,EA7JO,IAAMkD,EAAgB,SAACtD,EAAUE,EAASE,GAASL,OAAAA,EAAMC,EAAU,gBAAiBE,EAASE,IA6JpG,QAAA,cAAA,EA1JO,IAAMmD,GAAc,SAACvD,EAAUE,EAASE,GAASL,OAAAA,EAAMC,EAAU,cAAeE,EAASE,IA0JhG,QAAA,YAAA,GAzJO,IAAMoD,GAAW,SAACxD,EAAUE,EAASE,GAASL,OAAAA,EAAMC,EAAU,WAAYE,EAASE,IAyJ1F,QAAA,SAAA,GAxJO,IAAMqD,GAAa,SAACzD,EAAUE,EAASE,GAASL,OAAAA,EAAMC,EAAU,aAAcE,EAASE,IAwJ9F,QAAA,WAAA,GAvJO,IAAMsD,GAAa,SAAC1D,EAAUE,EAASE,GAASL,OAAAA,EAAMC,EAAU,aAAcE,EAASE,IAuJ9F,QAAA,WAAA,GAtJO,IAAMuD,GAAY,SAAC3D,EAAUE,EAASE,GAASL,OAAAA,EAAMC,EAAU,YAAaE,EAASE,IAsJ5F,QAAA,UAAA,GArJO,IAAMwD,GAAa,SAAC5D,EAAUE,EAASE,GAASL,OAAAA,EAAMC,EAAU,aAAcE,EAASE,IAqJ9F,QAAA,WAAA,GAlJO,IAAMyD,GAAc,SAAC7D,EAAUE,EAASE,GAASL,OAAAA,EAAMC,EAAU,cAAeE,EAASE,IAkJhG,QAAA,YAAA,GAjJO,IAAM0D,GAAe,SAAC9D,EAAUE,EAASE,GAASL,OAAAA,EAAMC,EAAU,eAAgBE,EAASE,IAiJlG,QAAA,aAAA,GAhJO,IAAM2D,GAAc,SAAC/D,EAAUE,EAASE,GAASL,OAAAA,EAAMC,EAAU,cAAeE,EAASE,IAgJhG,QAAA,YAAA,GA/IO,IAAM4D,GAAc,SAAChE,EAAUE,EAASE,GAASL,OAAAA,EAAMC,EAAU,cAAeE,EAASE,IA+IhG,QAAA,YAAA,GA9IO,IAAM6D,GAAY,SAACjE,EAAUE,EAASE,GAASL,OAAAA,EAAMC,EAAU,YAAaE,EAASE,IA8I5F,QAAA,UAAA,GA7IO,IAAM8D,GAAgB,SAAClE,EAAUE,EAASE,GAASL,OAAAA,EAAMC,EAAU,gBAAiBE,EAASE,IA6IpG,QAAA,cAAA,GA5IO,IAAM+D,GAAa,SAACnE,EAAUE,EAASE,GAASL,OAAAA,EAAMC,EAAU,aAAcE,EAASE,IA4I9F,QAAA,WAAA,GA3IO,IAAMgE,GAAe,SAACpE,EAAUE,EAASE,GAASL,OAAAA,EAAMC,EAAU,eAAgBE,EAASE,IA2IlG,QAAA,aAAA,GA1IO,IAAMiE,GAAoB,SAACrE,EAAUE,EAASE,GAASL,OAAAA,EAAMC,EAAU,oBAAqBE,EAASE,IA0I5G,QAAA,kBAAA,GAzIO,IAAMkE,GAAqB,SAACtE,EAAUE,EAASE,GAASL,OAAAA,EAAMC,EAAU,qBAAsBE,EAASE,IAyI9G,QAAA,mBAAA,GAtIe,IAAA,GAAA,CAEbL,MAAAA,EAEAM,MAAAA,EACAC,KAAAA,EAEAC,MAAAA,EACAC,OAAAA,EAEAC,iBAAAA,EACAC,gBAAAA,EACAC,OAAAA,EACAC,OAAAA,EAEAC,IAAAA,EACAC,KAAAA,EACAC,MAAAA,EAEAC,QAAAA,EACAC,SAAAA,EACAC,MAAAA,EAEAC,SAAAA,EACAC,MAAAA,EACAC,YAAAA,EACAC,SAAAA,EACAC,UAAAA,EACAC,WAAAA,EACAC,WAAAA,EACAC,UAAAA,EACAC,UAAAA,EACAC,SAAAA,EACAC,QAAAA,EACAC,kBAAAA,EACAC,iBAAAA,EACAC,OAAAA,EACAC,MAAAA,EAEAC,KAAAA,EACAC,QAAAA,EACAC,UAAAA,EACAC,UAAAA,EACAC,UAAAA,EACAC,SAAAA,EACAC,KAAAA,EAEAC,UAAAA,EACAC,oBAAAA,EACAC,WAAAA,EACAC,MAAAA,EACAC,iBAAAA,EACAC,iBAAAA,EACAC,YAAAA,EAEAC,wBAAAA,EACAC,YAAAA,EACAC,aAAAA,EACAC,kBAAAA,EACAC,gBAAAA,EACAC,kBAAAA,EACAC,cAAAA,EAEAC,YAAAA,GACAC,SAAAA,GACAC,WAAAA,GACAC,WAAAA,GACAC,UAAAA,GACAC,WAAAA,GAEAC,YAAAA,GACAC,aAAAA,GACAC,YAAAA,GACAC,YAAAA,GACAC,UAAAA,GACAC,cAAAA,GACAC,WAAAA,GACAC,aAAAA,GACAC,kBAAAA,GACAC,mBAAAA,GAGAC,aAAc,QAGdC,aAAc,aAGdrE,YAAa,MAIbsE,UAA0B,SAAA,GAAA,IAAA,EAAA,KAAbC,EAAAA,EAAAA,UACNA,KAAAA,UAAYA,EAEjBC,GAAOC,QAAQ,SAAA7E,GACb,EAAK8E,QAAQ9E,GAAS,GAEtB+E,OAAOC,iBAAiBhF,EAAO,SAAAiF,GAC7B,EAAKH,QAAQ9E,GAAO6E,QAAQ,SAA2B,GAAxB5E,IAAAA,EAAAA,EAAAA,SAAUE,EAAAA,EAAAA,SACnC,EAAK+E,UAAUjF,IAAagF,EAAEE,OAAOC,QAAQnF,KAC/CE,EAAQ8E,UASlBI,SAAUC,SAAAA,GAAW,IAAA,EAAA,KACnBA,EAAYA,EAAUC,IAAI,SAAAvF,GAClBG,IACAF,EAAWD,EAAMK,KAAKmF,UAAY,EAAKN,UAAUlF,EAAMC,UACzDD,EAAMC,SACHD,GAAAA,OAAAA,EAAMC,SAAaD,MAAAA,OAAAA,EAAMC,SAFhC,QAIYD,OAAAA,EAAAA,GAAAA,EAAZ,CAAmBG,QALH,SAAA8E,GAAK,OAAA,EAAKN,UAAU3E,EAAMG,QAAQ8E,KAKtBhF,SAAAA,MAGnBD,IAAAA,EAAAA,SAAAA,GACT,EAAK8E,QAAQ9E,GAASsF,EAAUG,OAAO,SAAA,GACrCvF,OADwCA,EAAAA,YAC1BF,KAFb,IAAA,IAAMA,KAAS,KAAK8E,QAAd9E,EAAAA,IAOb2E,UAAW,KACXG,QAAS,GACTI,UAAWjF,SAAAA,GACFA,MAAa,aAAbA,GAAwC,WAAbA,IAItC,QAAA,QAAA,GAAA,IAAM2E,GAAS,CAEb,QAAS,OAET,QAAS,SAET,mBAAoB,kBAAmB,SAAU,SAEjD,MAAO,OAAQ,QAEf,UAAW,WAAY,QAEvB,WAAY,QAAS,cAAe,WAAY,YAAa,aAC7D,aAAc,YAAa,YAAa,WAAY,UAAW,oBAC/D,mBAAoB,SAAU,QAE9B,OAAQ,UAAW,YAAa,YAAa,YAAa,WAAY,OAEtE,YAAa,sBAAuB,aAAc,QAAS,mBAC3D,mBAAoB,cAEpB,0BAA2B,cAAe,eAAgB,oBAC1D,kBAAmB,oBAAqB,gBAExC,cAAe,WAAY,aAAc,aAAc,YAAa,aAEpE,cAAe,eAAgB,cAAe,cAAe,YAC7D,gBAAiB,aAAc,eAAgB,oBAC/C","file":"event.js","sourceRoot":"../src","sourcesContent":["export const event = (selector, eventName, handler, opts = {}) => ({\n  __eventType: 'DOM', selector, eventName, handler, opts\n})\n\n// MOST COMMON EVENTS -------------------------------------------------------\n// Focus events\nexport const focus = (selector, handler, opts) => event(selector, 'focus', handler, opts)\nexport const blur = (selector, handler, opts) => event(selector, 'blur', handler, opts)\n\n// Form events\nexport const reset = (selector, handler, opts) => event(selector, 'reset', handler, opts)\nexport const submit = (selector, handler, opts) => event(selector, 'submit', handler, opts)\n\n// View events\nexport const fullscreenchange = (selector, handler, opts) => event(selector, 'fullscreenchange', handler, opts)\nexport const fullscreenerror = (selector, handler, opts) => event(selector, 'fullscreenerror', handler, opts)\nexport const resize = (selector, handler, opts) => event(selector, 'resize', handler, opts)\nexport const scroll = (selector, handler, opts) => event(selector, 'scroll', handler, opts)\n\n// Clipboard events\nexport const cut = (selector, handler, opts) => event(selector, 'cut', handler, opts)\nexport const copy = (selector, handler, opts) => event(selector, 'copy', handler, opts)\nexport const paste = (selector, handler, opts) => event(selector, 'paste', handler, opts)\n\n// Keyboard events\nexport const keydown = (selector, handler, opts) => event(selector, 'keydown', handler, opts)\nexport const keypress = (selector, handler, opts) => event(selector, 'keypress', handler, opts)\nexport const keyup = (selector, handler, opts) => event(selector, 'keyup', handler, opts)\n\n// Mouse events\nexport const auxclick = (selector, handler, opts) => event(selector, 'auxclick', handler, opts)\nexport const click = (selector, handler, opts) => event(selector, 'click', handler, opts)\nexport const contextmenu = (selector, handler, opts) => event(selector, 'contextmenu', handler, opts)\nexport const dblclick = (selector, handler, opts) => event(selector, 'dblclick', handler, opts)\nexport const mousedown = (selector, handler, opts) => event(selector, 'mousedown', handler, opts)\nexport const mouseenter = (selector, handler, opts) => event(selector, 'mouseenter', handler, opts)\nexport const mouseleave = (selector, handler, opts) => event(selector, 'mouseleave', handler, opts)\nexport const mousemove = (selector, handler, opts) => event(selector, 'mousemove', handler, opts)\n\nexport const mouseover = (selector, handler, opts) => event(selector, 'mouseover', handler, opts)\nexport const mouseout = (selector, handler, opts) => event(selector, 'mouseout', handler, opts)\nexport const mouseup = (selector, handler, opts) => event(selector, 'mouseup', handler, opts)\nexport const pointerlockchange = (selector, handler, opts) => event(selector, 'pointerlockchange', handler, opts)\nexport const pointerlockerror = (selector, handler, opts) => event(selector, 'pointerlockerror', handler, opts)\nexport const select = (selector, handler, opts) => event(selector, 'select', handler, opts)\nexport const wheel = (selector, handler, opts) => event(selector, 'wheel', handler, opts)\n\n// Drag & Drop events\nexport const drag = (selector, handler, opts) => event(selector, 'drag', handler, opts)\nexport const dragend = (selector, handler, opts) => event(selector, 'dragend', handler, opts)\nexport const dragenter = (selector, handler, opts) => event(selector, 'dragenter', handler, opts)\nexport const dragstart = (selector, handler, opts) => event(selector, 'dragstart', handler, opts)\nexport const dragleave = (selector, handler, opts) => event(selector, 'dragleave', handler, opts)\nexport const dragover = (selector, handler, opts) => event(selector, 'dragover', handler, opts)\nexport const drop = (selector, handler, opts) => event(selector, 'drop', handler, opts)\n\n// Value change events\nexport const broadcast = (selector, handler, opts) => event(selector, 'broadcast', handler, opts)\nexport const CheckboxStateChange = (selector, handler, opts) => event(selector, 'CheckboxStateChange', handler, opts)\nexport const hashchange = (selector, handler, opts) => event(selector, 'hashchange', handler, opts)\nexport const input = (selector, handler, opts) => event(selector, 'input', handler, opts)\nexport const RadioStateChange = (selector, handler, opts) => event(selector, 'RadioStateChange', handler, opts)\nexport const readystatechange = (selector, handler, opts) => event(selector, 'readystatechange', handler, opts)\nexport const ValueChange = (selector, handler, opts) => event(selector, 'ValueChange', handler, opts)\n\n// LESS COMMON EVENTS -------------------------------------------------------\n// Sensor events\nexport const compassneedscalibration = (selector, handler, opts) => event(selector, 'compassneedscalibration', handler, opts)\nexport const devicelight = (selector, handler, opts) => event(selector, 'devicelight', handler, opts)\nexport const devicemotion = (selector, handler, opts) => event(selector, 'devicemotion', handler, opts)\nexport const deviceorientation = (selector, handler, opts) => event(selector, 'deviceorientation', handler, opts)\nexport const deviceproximity = (selector, handler, opts) => event(selector, 'deviceproximity', handler, opts)\nexport const orientationchange = (selector, handler, opts) => event(selector, 'orientationchange', handler, opts)\nexport const userproximity = (selector, handler, opts) => event(selector, 'userproximity', handler, opts)\n\n// Touch events\nexport const touchcancel = (selector, handler, opts) => event(selector, 'touchcancel', handler, opts)\nexport const touchend = (selector, handler, opts) => event(selector, 'touchend', handler, opts)\nexport const touchenter = (selector, handler, opts) => event(selector, 'touchenter', handler, opts)\nexport const touchleave = (selector, handler, opts) => event(selector, 'touchleave', handler, opts)\nexport const touchmove = (selector, handler, opts) => event(selector, 'touchmove', handler, opts)\nexport const touchstart = (selector, handler, opts) => event(selector, 'touchstart', handler, opts)\n\n// Pointer events\nexport const pointerover = (selector, handler, opts) => event(selector, 'pointerover', handler, opts)\nexport const pointerenter = (selector, handler, opts) => event(selector, 'pointerenter', handler, opts)\nexport const pointerdown = (selector, handler, opts) => event(selector, 'pointerdown', handler, opts)\nexport const pointermove = (selector, handler, opts) => event(selector, 'pointermove', handler, opts)\nexport const pointerup = (selector, handler, opts) => event(selector, 'pointerup', handler, opts)\nexport const pointercancel = (selector, handler, opts) => event(selector, 'pointercancel', handler, opts)\nexport const pointerout = (selector, handler, opts) => event(selector, 'pointerout', handler, opts)\nexport const pointerleave = (selector, handler, opts) => event(selector, 'pointerleave', handler, opts)\nexport const gotpointercapture = (selector, handler, opts) => event(selector, 'gotpointercapture', handler, opts)\nexport const lostpointercapture = (selector, handler, opts) => event(selector, 'lostpointercapture', handler, opts)\n\n//\nexport default {\n  // Core ======================================================================\n  event,\n  // Focus events\n  focus,\n  blur,\n  // Form events\n  reset,\n  submit,\n  // View events\n  fullscreenchange,\n  fullscreenerror,\n  resize,\n  scroll,\n  // Clipboard events\n  cut,\n  copy,\n  paste,\n  // Keyboard events\n  keydown,\n  keypress,\n  keyup,\n  // Mouse events\n  auxclick,\n  click,\n  contextmenu,\n  dblclick,\n  mousedown,\n  mouseenter,\n  mouseleave,\n  mousemove,\n  mouseover,\n  mouseout,\n  mouseup,\n  pointerlockchange,\n  pointerlockerror,\n  select,\n  wheel,\n  // Drag & Drop events\n  drag,\n  dragend,\n  dragenter,\n  dragstart,\n  dragleave,\n  dragover,\n  drop,\n  // Value change events\n  broadcast,\n  CheckboxStateChange,\n  hashchange,\n  input,\n  RadioStateChange,\n  readystatechange,\n  ValueChange,\n  // Sensor events\n  compassneedscalibration,\n  devicelight,\n  devicemotion,\n  deviceorientation,\n  deviceproximity,\n  orientationchange,\n  userproximity,\n  // Touch events\n  touchcancel,\n  touchend,\n  touchenter,\n  touchleave,\n  touchmove,\n  touchstart,\n  // Pointer events\n  pointerover,\n  pointerenter,\n  pointerdown,\n  pointermove,\n  pointerup,\n  pointercancel,\n  pointerout,\n  pointerleave,\n  gotpointercapture,\n  lostpointercapture,\n  // Plugin data ===============================================================\n  // The runtime needs to know what type of plugin to install\n  __pluginType: 'event',\n  // In the future, __pluginName will be used to stop duplicate plugins being\n  // registered.\n  __pluginName: 'Html.Event',\n  // The event type should match the __eventType of any event objects you want\n  // this plugin to handle.\n  __eventType: 'DOM',\n  // Install is called after a program has been started. It is always passed an\n  // object with $context, $root, and $dispatch but a plugin may choose to ignore\n  // any or all of these fields.\n  __install ({ $dispatch }) {\n    this.$dispatch = $dispatch\n\n    events.forEach(event => {\n      this.$events[event] = []\n\n      window.addEventListener(event, e => {\n        this.$events[event].forEach(({ selector, handler }) => {\n          if (this.$isGlobal(selector) || e.target.matches(selector)) {\n            handler(e)\n          }\n        })\n      })\n    })\n  },\n  // Update is called every time the model is updated, and it receives a filtered\n  // list of all the new event listeners. The list is filtered based on the\n  // __eventType defined above.\n  __update (newEvents) {\n    newEvents = newEvents.map(event => {\n      const handler = e => this.$dispatch(event.handler(e))\n      const selector = event.opts.specific || this.$isGlobal(event.selector)\n        ? event.selector\n        : `${event.selector}, ${event.selector} > *`\n\n      return { ...event, handler, selector }\n    })\n\n    for (const event in this.$events) {\n      this.$events[event] = newEvents.filter(({ eventName }) =>\n        eventName === event\n      )\n    }\n  },\n  //\n  $dispatch: null,\n  $events: {},\n  $isGlobal (selector) {\n    return selector === 'document' || selector === 'window'\n  }\n}\n\nconst events = [\n  // Focus events\n  'focus', 'blur',\n  // Form events\n  'reset', 'submit',\n  // View events\n  'fullscreenchange', 'fullscreenerror', 'resize', 'scroll',\n  // Clipboard events\n  'cut', 'copy', 'paste',\n  // Keyboard events\n  'keydown', 'keypress', 'keyup',\n  // Mouse events\n  'auxclick', 'click', 'contextmenu', 'dblclick', 'mousedown', 'mouseenter',\n  'mouseleave', 'mousemove', 'mouseover', 'mouseout', 'mouseup', 'pointerlockchange',\n  'pointerlockerror', 'select', 'wheel',\n  // Drag & Drop events\n  'drag', 'dragend', 'dragenter', 'dragstart', 'dragleave', 'dragover', 'drop',\n  // Value change events\n  'broadcast', 'CheckboxStateChange', 'hashchange', 'input', 'RadioStateChange',\n  'readystatechange', 'ValueChange',\n  // Sensor events\n  'compassneedscalibration', 'devicelight', 'devicemotion', 'deviceorientation',\n  'deviceproximity', 'orientationchange', 'userproximity',\n  // Touch events\n  'touchcancel', 'touchend', 'touchenter', 'touchleave', 'touchmove', 'touchstart',\n  // Pointer events\n  'pointerover', 'pointerenter', 'pointerdown', 'pointermove', 'pointerup',\n  'pointercancel', 'pointerout', 'pointerleave', 'gotpointercapture',\n  'lostpointercapture'\n]\n"]}